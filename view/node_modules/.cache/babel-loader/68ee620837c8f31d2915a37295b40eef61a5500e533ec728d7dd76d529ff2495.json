{"ast":null,"code":"import { identity } from \"./continuous\";\nimport { initInterpolator } from \"./init\";\nimport { linearish } from \"./linear\";\nimport { loggish } from \"./log\";\nimport { copy } from \"./sequential\";\nimport { symlogish } from \"./symlog\";\nimport { powish } from \"./pow\";\nfunction transformer() {\n  var x0 = 0,\n    x1 = 0.5,\n    x2 = 1,\n    t0,\n    t1,\n    t2,\n    k10,\n    k21,\n    interpolator = identity,\n    transform,\n    clamp = false,\n    unknown;\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n  scale.domain = function (_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];\n  };\n  scale.clamp = function (_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n  scale.interpolator = function (_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n  return function (t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);\n    return scale;\n  };\n}\nexport default function diverging() {\n  var scale = linearish(transformer()(identity));\n  scale.copy = function () {\n    return copy(scale, diverging());\n  };\n  return initInterpolator.apply(scale, arguments);\n}\nexport function divergingLog() {\n  var scale = loggish(transformer()).domain([0.1, 1, 10]);\n  scale.copy = function () {\n    return copy(scale, divergingLog()).base(scale.base());\n  };\n  return initInterpolator.apply(scale, arguments);\n}\nexport function divergingSymlog() {\n  var scale = symlogish(transformer());\n  scale.copy = function () {\n    return copy(scale, divergingSymlog()).constant(scale.constant());\n  };\n  return initInterpolator.apply(scale, arguments);\n}\nexport function divergingPow() {\n  var scale = powish(transformer());\n  scale.copy = function () {\n    return copy(scale, divergingPow()).exponent(scale.exponent());\n  };\n  return initInterpolator.apply(scale, arguments);\n}\nexport function divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}","map":{"version":3,"names":["identity","initInterpolator","linearish","loggish","copy","symlogish","powish","transformer","x0","x1","x2","t0","t1","t2","k10","k21","interpolator","transform","clamp","unknown","scale","x","isNaN","Math","max","min","domain","_","arguments","length","t","diverging","apply","divergingLog","base","divergingSymlog","constant","divergingPow","exponent","divergingSqrt"],"sources":["C:/UsersFolders/Polina/РЭУ/Graph/view/node_modules/d3-scale/src/diverging.js"],"sourcesContent":["import {identity} from \"./continuous\";\nimport {initInterpolator} from \"./init\";\nimport {linearish} from \"./linear\";\nimport {loggish} from \"./log\";\nimport {copy} from \"./sequential\";\nimport {symlogish} from \"./symlog\";\nimport {powish} from \"./pow\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);\n    return scale;\n  };\n}\n\nexport default function diverging() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingLog() {\n  var scale = loggish(transformer()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}