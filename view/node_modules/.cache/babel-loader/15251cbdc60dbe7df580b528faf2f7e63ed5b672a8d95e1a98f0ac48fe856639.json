{"ast":null,"code":"/* global CANNON */\n\n/**\n * Based on aframe/examples/showcase/tracked-controls.\n *\n * Handles events coming from the hand-controls.\n * Determines if the entity is grabbed or released.\n * Updates its position to move along the controller.\n */\nmodule.exports = AFRAME.registerComponent('grab', {\n  init: function () {\n    this.system = this.el.sceneEl.systems.physics;\n    this.GRABBED_STATE = 'grabbed';\n    this.grabbing = false;\n    this.hitEl = /** @type {AFRAME.Element}    */null;\n    this.physics = /** @type {AFRAME.System}     */this.el.sceneEl.systems.physics;\n    this.constraint = /** @type {CANNON.Constraint} */null;\n\n    // Bind event handlers\n    this.onHit = this.onHit.bind(this);\n    this.onGripOpen = this.onGripOpen.bind(this);\n    this.onGripClose = this.onGripClose.bind(this);\n  },\n  play: function () {\n    const el = this.el;\n    el.addEventListener('hit', this.onHit);\n    el.addEventListener('gripdown', this.onGripClose);\n    el.addEventListener('gripup', this.onGripOpen);\n    el.addEventListener('trackpaddown', this.onGripClose);\n    el.addEventListener('trackpadup', this.onGripOpen);\n    el.addEventListener('triggerdown', this.onGripClose);\n    el.addEventListener('triggerup', this.onGripOpen);\n  },\n  pause: function () {\n    const el = this.el;\n    el.removeEventListener('hit', this.onHit);\n    el.removeEventListener('gripdown', this.onGripClose);\n    el.removeEventListener('gripup', this.onGripOpen);\n    el.removeEventListener('trackpaddown', this.onGripClose);\n    el.removeEventListener('trackpadup', this.onGripOpen);\n    el.removeEventListener('triggerdown', this.onGripClose);\n    el.removeEventListener('triggerup', this.onGripOpen);\n  },\n  onGripClose: function () {\n    this.grabbing = true;\n  },\n  onGripOpen: function () {\n    const hitEl = this.hitEl;\n    this.grabbing = false;\n    if (!hitEl) {\n      return;\n    }\n    hitEl.removeState(this.GRABBED_STATE);\n    this.hitEl = undefined;\n    this.system.removeConstraint(this.constraint);\n    this.constraint = null;\n  },\n  onHit: function (evt) {\n    const hitEl = evt.detail.el;\n    // If the element is already grabbed (it could be grabbed by another controller).\n    // If the hand is not grabbing the element does not stick.\n    // If we're already grabbing something you can't grab again.\n    if (hitEl.is(this.GRABBED_STATE) || !this.grabbing || this.hitEl) {\n      return;\n    }\n    hitEl.addState(this.GRABBED_STATE);\n    this.hitEl = hitEl;\n    this.constraint = new CANNON.LockConstraint(this.el.body, hitEl.body);\n    this.system.addConstraint(this.constraint);\n  }\n});","map":{"version":3,"names":["module","exports","AFRAME","registerComponent","init","system","el","sceneEl","systems","physics","GRABBED_STATE","grabbing","hitEl","constraint","onHit","bind","onGripOpen","onGripClose","play","addEventListener","pause","removeEventListener","removeState","undefined","removeConstraint","evt","detail","is","addState","CANNON","LockConstraint","body","addConstraint"],"sources":["C:/UsersFolders/Polina/РЭУ/Graph/view/node_modules/aframe-extras/src/misc/grab.js"],"sourcesContent":["/* global CANNON */\n\n/**\n * Based on aframe/examples/showcase/tracked-controls.\n *\n * Handles events coming from the hand-controls.\n * Determines if the entity is grabbed or released.\n * Updates its position to move along the controller.\n */\nmodule.exports = AFRAME.registerComponent('grab', {\n  init: function () {\n    this.system = this.el.sceneEl.systems.physics;\n\n    this.GRABBED_STATE = 'grabbed';\n\n    this.grabbing = false;\n    this.hitEl =      /** @type {AFRAME.Element}    */ null;\n    this.physics =    /** @type {AFRAME.System}     */ this.el.sceneEl.systems.physics;\n    this.constraint = /** @type {CANNON.Constraint} */ null;\n\n    // Bind event handlers\n    this.onHit = this.onHit.bind(this);\n    this.onGripOpen = this.onGripOpen.bind(this);\n    this.onGripClose = this.onGripClose.bind(this);\n  },\n\n  play: function () {\n    const el = this.el;\n    el.addEventListener('hit', this.onHit);\n    el.addEventListener('gripdown', this.onGripClose);\n    el.addEventListener('gripup', this.onGripOpen);\n    el.addEventListener('trackpaddown', this.onGripClose);\n    el.addEventListener('trackpadup', this.onGripOpen);\n    el.addEventListener('triggerdown', this.onGripClose);\n    el.addEventListener('triggerup', this.onGripOpen);\n  },\n\n  pause: function () {\n    const el = this.el;\n    el.removeEventListener('hit', this.onHit);\n    el.removeEventListener('gripdown', this.onGripClose);\n    el.removeEventListener('gripup', this.onGripOpen);\n    el.removeEventListener('trackpaddown', this.onGripClose);\n    el.removeEventListener('trackpadup', this.onGripOpen);\n    el.removeEventListener('triggerdown', this.onGripClose);\n    el.removeEventListener('triggerup', this.onGripOpen);\n  },\n\n  onGripClose: function () {\n    this.grabbing = true;\n  },\n\n  onGripOpen: function () {\n    const hitEl = this.hitEl;\n    this.grabbing = false;\n    if (!hitEl) { return; }\n    hitEl.removeState(this.GRABBED_STATE);\n    this.hitEl = undefined;\n    this.system.removeConstraint(this.constraint);\n    this.constraint = null;\n  },\n\n  onHit: function (evt) {\n    const hitEl = evt.detail.el;\n    // If the element is already grabbed (it could be grabbed by another controller).\n    // If the hand is not grabbing the element does not stick.\n    // If we're already grabbing something you can't grab again.\n    if (hitEl.is(this.GRABBED_STATE) || !this.grabbing || this.hitEl) { return; }\n    hitEl.addState(this.GRABBED_STATE);\n    this.hitEl = hitEl;\n    this.constraint = new CANNON.LockConstraint(this.el.body, hitEl.body);\n    this.system.addConstraint(this.constraint);\n  }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}