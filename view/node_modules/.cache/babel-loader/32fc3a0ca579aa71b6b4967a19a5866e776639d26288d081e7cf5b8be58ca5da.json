{"ast":null,"code":"import { Graph } from 'react-d3-graph';\nimport { Data } from './data';\nimport { config } from './config';\nimport './graph.css';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  nodes: [{\n    id: 'Harry'\n  }, {\n    id: 'Sally'\n  }, {\n    id: 'Alice'\n  }],\n  links: [{\n    source: 'Harry',\n    target: 'Sally'\n  }, {\n    source: 'Harry',\n    target: 'Alice'\n  }]\n};\nconst myConfig = {\n  nodeHighlightBehavior: true,\n  node: {\n    color: 'lightgreen',\n    size: 120,\n    highlightStrokeColor: 'blue'\n  },\n  link: {\n    highlightColor: 'lightblue'\n  }\n};\n\n// Callback to handle click on the graph.\n// @param {Object} event click dom event\nconst onClickGraph = function (event) {\n  window.alert('Clicked the graph background');\n};\nconst onClickNode = function (nodeId, node) {\n  window.alert('Clicked node ${nodeId} in position (${node.x}, ${node.y})');\n};\nconst onDoubleClickNode = function (nodeId, node) {\n  window.alert('Double clicked node ${nodeId} in position (${node.x}, ${node.y})');\n};\nconst onRightClickNode = function (event, nodeId, node) {\n  window.alert('Right clicked node ${nodeId} in position (${node.x}, ${node.y})');\n};\nconst onMouseOverNode = function (nodeId, node) {\n  window.alert(`Mouse over node ${nodeId} in position (${node.x}, ${node.y})`);\n};\nconst onMouseOutNode = function (nodeId, node) {\n  window.alert(`Mouse out node ${nodeId} in position (${node.x}, ${node.y})`);\n};\nconst onClickLink = function (source, target) {\n  window.alert(`Clicked link between ${source} and ${target}`);\n};\nconst onRightClickLink = function (event, source, target) {\n  window.alert('Right clicked link between ${source} and ${target}');\n};\nconst onMouseOverLink = function (source, target) {\n  window.alert(`Mouse over in link between ${source} and ${target}`);\n};\nconst onMouseOutLink = function (source, target) {\n  window.alert(`Mouse out link between ${source} and ${target}`);\n};\nconst onNodePositionChange = function (nodeId, x, y) {\n  window.alert(`Node ${nodeId} moved to new position x= ${x} y= ${y}`);\n};\n\n// Callback that's called whenever the graph is zoomed in/out\n// @param {number} previousZoom the previous graph zoom\n// @param {number} newZoom the new graph zoom\nconst onZoomChange = function (previousZoom, newZoom) {\n  window.alert(`Graph is now zoomed at ${newZoom} from ${previousZoom}`);\n};\nexport const GraphView = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_c = GraphView;\nvar _c;\n$RefreshReg$(_c, \"GraphView\");","map":{"version":3,"names":["Graph","Data","config","Fragment","_Fragment","jsxDEV","_jsxDEV","data","nodes","id","links","source","target","myConfig","nodeHighlightBehavior","node","color","size","highlightStrokeColor","link","highlightColor","onClickGraph","event","window","alert","onClickNode","nodeId","onDoubleClickNode","onRightClickNode","onMouseOverNode","x","y","onMouseOutNode","onClickLink","onRightClickLink","onMouseOverLink","onMouseOutLink","onNodePositionChange","onZoomChange","previousZoom","newZoom","GraphView","_c","$RefreshReg$"],"sources":["C:/UsersFolders/Polina/РЭУ/Graph/view/src/components/graph/graph.js"],"sourcesContent":["import { Graph } from  'react-d3-graph' ;\r\nimport {Data} from './data'\r\nimport { config } from './config';\r\nimport './graph.css'\r\nconst data = {\r\n    nodes: [\r\n      {id: 'Harry'},\r\n      {id: 'Sally'},\r\n      {id: 'Alice'}\r\n    ],\r\n    links: [\r\n        {source: 'Harry', target: 'Sally'},\r\n        {source: 'Harry', target: 'Alice'},\r\n    ]\r\n};\r\nconst myConfig = {\r\n    nodeHighlightBehavior: true,\r\n    node: {\r\n        color: 'lightgreen',\r\n        size: 120,\r\n        highlightStrokeColor: 'blue'\r\n    },\r\n    link: {\r\n        highlightColor: 'lightblue'\r\n    }\r\n};\r\n\r\n// Callback to handle click on the graph.\r\n// @param {Object} event click dom event\r\nconst onClickGraph = function(event) {\r\n     window.alert('Clicked the graph background');\r\n};\r\n\r\nconst onClickNode = function(nodeId, node) {\r\n     window.alert('Clicked node ${nodeId} in position (${node.x}, ${node.y})');\r\n};\r\n\r\nconst onDoubleClickNode = function(nodeId, node) {\r\n     window.alert('Double clicked node ${nodeId} in position (${node.x}, ${node.y})');\r\n};\r\n\r\nconst onRightClickNode = function(event, nodeId, node) {\r\n     window.alert('Right clicked node ${nodeId} in position (${node.x}, ${node.y})');\r\n};\r\n\r\nconst onMouseOverNode = function(nodeId, node) {\r\n     window.alert(`Mouse over node ${nodeId} in position (${node.x}, ${node.y})`);\r\n};\r\n\r\nconst onMouseOutNode = function(nodeId, node) {\r\n     window.alert(`Mouse out node ${nodeId} in position (${node.x}, ${node.y})`);\r\n};\r\n\r\nconst onClickLink = function(source, target) {\r\n     window.alert(`Clicked link between ${source} and ${target}`);\r\n};\r\n\r\nconst onRightClickLink = function(event, source, target) {\r\n     window.alert('Right clicked link between ${source} and ${target}');\r\n};\r\n\r\nconst onMouseOverLink = function(source, target) {\r\n     window.alert(`Mouse over in link between ${source} and ${target}`);\r\n};\r\n\r\nconst onMouseOutLink = function(source, target) {\r\n     window.alert(`Mouse out link between ${source} and ${target}`);\r\n};\r\n\r\nconst onNodePositionChange = function(nodeId, x, y) {\r\n     window.alert(`Node ${nodeId} moved to new position x= ${x} y= ${y}`);\r\n};\r\n\r\n// Callback that's called whenever the graph is zoomed in/out\r\n// @param {number} previousZoom the previous graph zoom\r\n// @param {number} newZoom the new graph zoom\r\nconst onZoomChange = function(previousZoom, newZoom) {\r\n     window.alert(`Graph is now zoomed at ${newZoom} from ${previousZoom}`);\r\n};\r\n\r\n\r\n\r\n\r\nexport const GraphView =() =>{\r\n    return (\r\n       <>\r\n       </>\r\n    )\r\n}"],"mappings":"AAAA,SAASA,KAAK,QAAS,gBAAgB;AACvC,SAAQC,IAAI,QAAO,QAAQ;AAC3B,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAO,aAAa;AAAA,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AACpB,MAAMC,IAAI,GAAG;EACTC,KAAK,EAAE,CACL;IAACC,EAAE,EAAE;EAAO,CAAC,EACb;IAACA,EAAE,EAAE;EAAO,CAAC,EACb;IAACA,EAAE,EAAE;EAAO,CAAC,CACd;EACDC,KAAK,EAAE,CACH;IAACC,MAAM,EAAE,OAAO;IAAEC,MAAM,EAAE;EAAO,CAAC,EAClC;IAACD,MAAM,EAAE,OAAO;IAAEC,MAAM,EAAE;EAAO,CAAC;AAE1C,CAAC;AACD,MAAMC,QAAQ,GAAG;EACbC,qBAAqB,EAAE,IAAI;EAC3BC,IAAI,EAAE;IACFC,KAAK,EAAE,YAAY;IACnBC,IAAI,EAAE,GAAG;IACTC,oBAAoB,EAAE;EAC1B,CAAC;EACDC,IAAI,EAAE;IACFC,cAAc,EAAE;EACpB;AACJ,CAAC;;AAED;AACA;AACA,MAAMC,YAAY,GAAG,SAAAA,CAASC,KAAK,EAAE;EAChCC,MAAM,CAACC,KAAK,CAAC,8BAA8B,CAAC;AACjD,CAAC;AAED,MAAMC,WAAW,GAAG,SAAAA,CAASC,MAAM,EAAEX,IAAI,EAAE;EACtCQ,MAAM,CAACC,KAAK,CAAC,2DAA2D,CAAC;AAC9E,CAAC;AAED,MAAMG,iBAAiB,GAAG,SAAAA,CAASD,MAAM,EAAEX,IAAI,EAAE;EAC5CQ,MAAM,CAACC,KAAK,CAAC,kEAAkE,CAAC;AACrF,CAAC;AAED,MAAMI,gBAAgB,GAAG,SAAAA,CAASN,KAAK,EAAEI,MAAM,EAAEX,IAAI,EAAE;EAClDQ,MAAM,CAACC,KAAK,CAAC,iEAAiE,CAAC;AACpF,CAAC;AAED,MAAMK,eAAe,GAAG,SAAAA,CAASH,MAAM,EAAEX,IAAI,EAAE;EAC1CQ,MAAM,CAACC,KAAK,CAAC,mBAAmBE,MAAM,iBAAiBX,IAAI,CAACe,CAAC,KAAKf,IAAI,CAACgB,CAAC,GAAG,CAAC;AACjF,CAAC;AAED,MAAMC,cAAc,GAAG,SAAAA,CAASN,MAAM,EAAEX,IAAI,EAAE;EACzCQ,MAAM,CAACC,KAAK,CAAC,kBAAkBE,MAAM,iBAAiBX,IAAI,CAACe,CAAC,KAAKf,IAAI,CAACgB,CAAC,GAAG,CAAC;AAChF,CAAC;AAED,MAAME,WAAW,GAAG,SAAAA,CAAStB,MAAM,EAAEC,MAAM,EAAE;EACxCW,MAAM,CAACC,KAAK,CAAC,wBAAwBb,MAAM,QAAQC,MAAM,EAAE,CAAC;AACjE,CAAC;AAED,MAAMsB,gBAAgB,GAAG,SAAAA,CAASZ,KAAK,EAAEX,MAAM,EAAEC,MAAM,EAAE;EACpDW,MAAM,CAACC,KAAK,CAAC,oDAAoD,CAAC;AACvE,CAAC;AAED,MAAMW,eAAe,GAAG,SAAAA,CAASxB,MAAM,EAAEC,MAAM,EAAE;EAC5CW,MAAM,CAACC,KAAK,CAAC,8BAA8Bb,MAAM,QAAQC,MAAM,EAAE,CAAC;AACvE,CAAC;AAED,MAAMwB,cAAc,GAAG,SAAAA,CAASzB,MAAM,EAAEC,MAAM,EAAE;EAC3CW,MAAM,CAACC,KAAK,CAAC,0BAA0Bb,MAAM,QAAQC,MAAM,EAAE,CAAC;AACnE,CAAC;AAED,MAAMyB,oBAAoB,GAAG,SAAAA,CAASX,MAAM,EAAEI,CAAC,EAAEC,CAAC,EAAE;EAC/CR,MAAM,CAACC,KAAK,CAAC,QAAQE,MAAM,6BAA6BI,CAAC,OAAOC,CAAC,EAAE,CAAC;AACzE,CAAC;;AAED;AACA;AACA;AACA,MAAMO,YAAY,GAAG,SAAAA,CAASC,YAAY,EAAEC,OAAO,EAAE;EAChDjB,MAAM,CAACC,KAAK,CAAC,0BAA0BgB,OAAO,SAASD,YAAY,EAAE,CAAC;AAC3E,CAAC;AAKD,OAAO,MAAME,SAAS,GAAEA,CAAA,KAAK;EACzB,oBACGnC,OAAA,CAAAF,SAAA,mBACE,CAAC;AAEV,CAAC;AAAAsC,EAAA,GALYD,SAAS;AAAA,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}