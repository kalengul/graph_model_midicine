{"ast":null,"code":"module.exports = AFRAME.registerComponent('checkpoint', {\n  schema: {\n    offset: {\n      default: {\n        x: 0,\n        y: 0,\n        z: 0\n      },\n      type: 'vec3'\n    }\n  },\n  init: function () {\n    this.active = false;\n    this.targetEl = null;\n    this.fire = this.fire.bind(this);\n    this.offset = new THREE.Vector3();\n  },\n  update: function () {\n    this.offset.copy(this.data.offset);\n  },\n  play: function () {\n    this.el.addEventListener('click', this.fire);\n  },\n  pause: function () {\n    this.el.removeEventListener('click', this.fire);\n  },\n  remove: function () {\n    this.pause();\n  },\n  fire: function () {\n    const targetEl = this.el.sceneEl.querySelector('[checkpoint-controls]');\n    if (!targetEl) {\n      throw new Error('No `checkpoint-controls` component found.');\n    }\n    targetEl.components['checkpoint-controls'].setCheckpoint(this.el);\n  },\n  getOffset: function () {\n    return this.offset.copy(this.data.offset);\n  }\n});","map":{"version":3,"names":["module","exports","AFRAME","registerComponent","schema","offset","default","x","y","z","type","init","active","targetEl","fire","bind","THREE","Vector3","update","copy","data","play","el","addEventListener","pause","removeEventListener","remove","sceneEl","querySelector","Error","components","setCheckpoint","getOffset"],"sources":["C:/UsersFolders/Polina/РЭУ/Graph/view/node_modules/aframe-extras/src/misc/checkpoint.js"],"sourcesContent":["module.exports = AFRAME.registerComponent('checkpoint', {\n  schema: {\n    offset: {default: {x: 0, y: 0, z: 0}, type: 'vec3'}\n  },\n\n  init: function () {\n    this.active = false;\n    this.targetEl = null;\n    this.fire = this.fire.bind(this);\n    this.offset = new THREE.Vector3();\n  },\n\n  update: function () {\n    this.offset.copy(this.data.offset);\n  },\n\n  play: function () { this.el.addEventListener('click', this.fire); },\n  pause: function () { this.el.removeEventListener('click', this.fire); },\n  remove: function () { this.pause(); },\n\n  fire: function () {\n    const targetEl = this.el.sceneEl.querySelector('[checkpoint-controls]');\n    if (!targetEl) {\n      throw new Error('No `checkpoint-controls` component found.');\n    }\n    targetEl.components['checkpoint-controls'].setCheckpoint(this.el);\n  },\n\n  getOffset: function () {\n    return this.offset.copy(this.data.offset);\n  }\n});\n"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAGC,MAAM,CAACC,iBAAiB,CAAC,YAAY,EAAE;EACtDC,MAAM,EAAE;IACNC,MAAM,EAAE;MAACC,OAAO,EAAE;QAACC,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAC,CAAC;MAAEC,IAAI,EAAE;IAAM;EACpD,CAAC;EAEDC,IAAI,EAAE,SAAAA,CAAA,EAAY;IAChB,IAAI,CAACC,MAAM,GAAG,KAAK;IACnB,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,IAAI,GAAG,IAAI,CAACA,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC;IAChC,IAAI,CAACV,MAAM,GAAG,IAAIW,KAAK,CAACC,OAAO,CAAC,CAAC;EACnC,CAAC;EAEDC,MAAM,EAAE,SAAAA,CAAA,EAAY;IAClB,IAAI,CAACb,MAAM,CAACc,IAAI,CAAC,IAAI,CAACC,IAAI,CAACf,MAAM,CAAC;EACpC,CAAC;EAEDgB,IAAI,EAAE,SAAAA,CAAA,EAAY;IAAE,IAAI,CAACC,EAAE,CAACC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACT,IAAI,CAAC;EAAE,CAAC;EACnEU,KAAK,EAAE,SAAAA,CAAA,EAAY;IAAE,IAAI,CAACF,EAAE,CAACG,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAACX,IAAI,CAAC;EAAE,CAAC;EACvEY,MAAM,EAAE,SAAAA,CAAA,EAAY;IAAE,IAAI,CAACF,KAAK,CAAC,CAAC;EAAE,CAAC;EAErCV,IAAI,EAAE,SAAAA,CAAA,EAAY;IAChB,MAAMD,QAAQ,GAAG,IAAI,CAACS,EAAE,CAACK,OAAO,CAACC,aAAa,CAAC,uBAAuB,CAAC;IACvE,IAAI,CAACf,QAAQ,EAAE;MACb,MAAM,IAAIgB,KAAK,CAAC,2CAA2C,CAAC;IAC9D;IACAhB,QAAQ,CAACiB,UAAU,CAAC,qBAAqB,CAAC,CAACC,aAAa,CAAC,IAAI,CAACT,EAAE,CAAC;EACnE,CAAC;EAEDU,SAAS,EAAE,SAAAA,CAAA,EAAY;IACrB,OAAO,IAAI,CAAC3B,MAAM,CAACc,IAAI,CAAC,IAAI,CAACC,IAAI,CAACf,MAAM,CAAC;EAC3C;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}