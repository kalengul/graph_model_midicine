{"ast":null,"code":"import { identity } from \"./continuous\";\nimport { initInterpolator } from \"./init\";\nimport { linearish } from \"./linear\";\nimport { loggish } from \"./log\";\nimport { symlogish } from \"./symlog\";\nimport { powish } from \"./pow\";\nfunction transformer() {\n  var x0 = 0,\n    x1 = 1,\n    t0,\n    t1,\n    k10,\n    transform,\n    interpolator = identity,\n    clamp = false,\n    unknown;\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n  scale.domain = function (_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n  scale.clamp = function (_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n  scale.interpolator = function (_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n  return function (t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\nexport function copy(source, target) {\n  return target.domain(source.domain()).interpolator(source.interpolator()).clamp(source.clamp()).unknown(source.unknown());\n}\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n  scale.copy = function () {\n    return copy(scale, sequential());\n  };\n  return initInterpolator.apply(scale, arguments);\n}\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n  scale.copy = function () {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n  return initInterpolator.apply(scale, arguments);\n}\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n  scale.copy = function () {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n  return initInterpolator.apply(scale, arguments);\n}\nexport function sequentialPow() {\n  var scale = powish(transformer());\n  scale.copy = function () {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n  return initInterpolator.apply(scale, arguments);\n}\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}","map":{"version":3,"names":["identity","initInterpolator","linearish","loggish","symlogish","powish","transformer","x0","x1","t0","t1","k10","transform","interpolator","clamp","unknown","scale","x","isNaN","Math","max","min","domain","_","arguments","length","t","copy","source","target","sequential","apply","sequentialLog","base","sequentialSymlog","constant","sequentialPow","exponent","sequentialSqrt"],"sources":["C:/UsersFolders/Polina/РЭУ/Graph/graph_model_midicine/view/node_modules/d3-scale/src/sequential.js"],"sourcesContent":["import {identity} from \"./continuous\";\nimport {initInterpolator} from \"./init\";\nimport {linearish} from \"./linear\";\nimport {loggish} from \"./log\";\nimport {symlogish} from \"./symlog\";\nimport {powish} from \"./pow\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}