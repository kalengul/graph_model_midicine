{"ast":null,"code":"const EPS = 0.1;\nmodule.exports = AFRAME.registerComponent('checkpoint-controls', {\n  schema: {\n    enabled: {\n      default: true\n    },\n    mode: {\n      default: 'teleport',\n      oneOf: ['teleport', 'animate']\n    },\n    animateSpeed: {\n      default: 3.0\n    }\n  },\n  init: function () {\n    this.active = true;\n    this.checkpoint = null;\n    this.isNavMeshConstrained = false;\n    this.offset = new THREE.Vector3();\n    this.position = new THREE.Vector3();\n    this.targetPosition = new THREE.Vector3();\n  },\n  play: function () {\n    this.active = true;\n  },\n  pause: function () {\n    this.active = false;\n  },\n  setCheckpoint: function (checkpoint) {\n    const el = this.el;\n    if (!this.active) return;\n    if (this.checkpoint === checkpoint) return;\n    if (this.checkpoint) {\n      el.emit('navigation-end', {\n        checkpoint: this.checkpoint\n      });\n    }\n    this.checkpoint = checkpoint;\n    this.sync();\n\n    // Ignore new checkpoint if we're already there.\n    if (this.position.distanceTo(this.targetPosition) < EPS) {\n      this.checkpoint = null;\n      return;\n    }\n    el.emit('navigation-start', {\n      checkpoint: checkpoint\n    });\n    if (this.data.mode === 'teleport') {\n      this.el.setAttribute('position', this.targetPosition);\n      this.checkpoint = null;\n      el.emit('navigation-end', {\n        checkpoint: checkpoint\n      });\n      el.components['movement-controls'].updateNavLocation();\n    }\n  },\n  isVelocityActive: function () {\n    return !!(this.active && this.checkpoint);\n  },\n  getVelocity: function () {\n    if (!this.active) return;\n    const data = this.data;\n    const offset = this.offset;\n    const position = this.position;\n    const targetPosition = this.targetPosition;\n    const checkpoint = this.checkpoint;\n    this.sync();\n    if (position.distanceTo(targetPosition) < EPS) {\n      this.checkpoint = null;\n      this.el.emit('navigation-end', {\n        checkpoint: checkpoint\n      });\n      return offset.set(0, 0, 0);\n    }\n    offset.setLength(data.animateSpeed);\n    return offset;\n  },\n  sync: function () {\n    const offset = this.offset;\n    const position = this.position;\n    const targetPosition = this.targetPosition;\n    position.copy(this.el.getAttribute('position'));\n    this.checkpoint.object3D.getWorldPosition(targetPosition);\n    targetPosition.add(this.checkpoint.components.checkpoint.getOffset());\n    offset.copy(targetPosition).sub(position);\n  }\n});","map":{"version":3,"names":["EPS","module","exports","AFRAME","registerComponent","schema","enabled","default","mode","oneOf","animateSpeed","init","active","checkpoint","isNavMeshConstrained","offset","THREE","Vector3","position","targetPosition","play","pause","setCheckpoint","el","emit","sync","distanceTo","data","setAttribute","components","updateNavLocation","isVelocityActive","getVelocity","set","setLength","copy","getAttribute","object3D","getWorldPosition","add","getOffset","sub"],"sources":["C:/UsersFolders/Polina/РЭУ/Graph/view/node_modules/aframe-extras/src/controls/checkpoint-controls.js"],"sourcesContent":["const EPS = 0.1;\n\nmodule.exports = AFRAME.registerComponent('checkpoint-controls', {\n  schema: {\n    enabled: {default: true},\n    mode: {default: 'teleport', oneOf: ['teleport', 'animate']},\n    animateSpeed: {default: 3.0}\n  },\n\n  init: function () {\n    this.active = true;\n    this.checkpoint = null;\n\n    this.isNavMeshConstrained = false;\n\n    this.offset = new THREE.Vector3();\n    this.position = new THREE.Vector3();\n    this.targetPosition = new THREE.Vector3();\n  },\n\n  play: function () { this.active = true; },\n  pause: function () { this.active = false; },\n\n  setCheckpoint: function (checkpoint) {\n    const el = this.el;\n\n    if (!this.active) return;\n    if (this.checkpoint === checkpoint) return;\n\n    if (this.checkpoint) {\n      el.emit('navigation-end', {checkpoint: this.checkpoint});\n    }\n\n    this.checkpoint = checkpoint;\n    this.sync();\n\n    // Ignore new checkpoint if we're already there.\n    if (this.position.distanceTo(this.targetPosition) < EPS) {\n      this.checkpoint = null;\n      return;\n    }\n\n    el.emit('navigation-start', {checkpoint: checkpoint});\n\n    if (this.data.mode === 'teleport') {\n      this.el.setAttribute('position', this.targetPosition);\n      this.checkpoint = null;\n      el.emit('navigation-end', {checkpoint: checkpoint});\n      el.components['movement-controls'].updateNavLocation();\n    }\n  },\n\n  isVelocityActive: function () {\n    return !!(this.active && this.checkpoint);\n  },\n\n  getVelocity: function () {\n    if (!this.active) return;\n\n    const data = this.data;\n    const offset = this.offset;\n    const position = this.position;\n    const targetPosition = this.targetPosition;\n    const checkpoint = this.checkpoint;\n\n    this.sync();\n    if (position.distanceTo(targetPosition) < EPS) {\n      this.checkpoint = null;\n      this.el.emit('navigation-end', {checkpoint: checkpoint});\n      return offset.set(0, 0, 0);\n    }\n    offset.setLength(data.animateSpeed);\n    return offset;\n  },\n\n  sync: function () {\n    const offset = this.offset;\n    const position = this.position;\n    const targetPosition = this.targetPosition;\n\n    position.copy(this.el.getAttribute('position'));\n    this.checkpoint.object3D.getWorldPosition(targetPosition);\n    targetPosition.add(this.checkpoint.components.checkpoint.getOffset());\n    offset.copy(targetPosition).sub(position);\n  }\n});\n"],"mappings":"AAAA,MAAMA,GAAG,GAAG,GAAG;AAEfC,MAAM,CAACC,OAAO,GAAGC,MAAM,CAACC,iBAAiB,CAAC,qBAAqB,EAAE;EAC/DC,MAAM,EAAE;IACNC,OAAO,EAAE;MAACC,OAAO,EAAE;IAAI,CAAC;IACxBC,IAAI,EAAE;MAACD,OAAO,EAAE,UAAU;MAAEE,KAAK,EAAE,CAAC,UAAU,EAAE,SAAS;IAAC,CAAC;IAC3DC,YAAY,EAAE;MAACH,OAAO,EAAE;IAAG;EAC7B,CAAC;EAEDI,IAAI,EAAE,SAAAA,CAAA,EAAY;IAChB,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,UAAU,GAAG,IAAI;IAEtB,IAAI,CAACC,oBAAoB,GAAG,KAAK;IAEjC,IAAI,CAACC,MAAM,GAAG,IAAIC,KAAK,CAACC,OAAO,CAAC,CAAC;IACjC,IAAI,CAACC,QAAQ,GAAG,IAAIF,KAAK,CAACC,OAAO,CAAC,CAAC;IACnC,IAAI,CAACE,cAAc,GAAG,IAAIH,KAAK,CAACC,OAAO,CAAC,CAAC;EAC3C,CAAC;EAEDG,IAAI,EAAE,SAAAA,CAAA,EAAY;IAAE,IAAI,CAACR,MAAM,GAAG,IAAI;EAAE,CAAC;EACzCS,KAAK,EAAE,SAAAA,CAAA,EAAY;IAAE,IAAI,CAACT,MAAM,GAAG,KAAK;EAAE,CAAC;EAE3CU,aAAa,EAAE,SAAAA,CAAUT,UAAU,EAAE;IACnC,MAAMU,EAAE,GAAG,IAAI,CAACA,EAAE;IAElB,IAAI,CAAC,IAAI,CAACX,MAAM,EAAE;IAClB,IAAI,IAAI,CAACC,UAAU,KAAKA,UAAU,EAAE;IAEpC,IAAI,IAAI,CAACA,UAAU,EAAE;MACnBU,EAAE,CAACC,IAAI,CAAC,gBAAgB,EAAE;QAACX,UAAU,EAAE,IAAI,CAACA;MAAU,CAAC,CAAC;IAC1D;IAEA,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACY,IAAI,CAAC,CAAC;;IAEX;IACA,IAAI,IAAI,CAACP,QAAQ,CAACQ,UAAU,CAAC,IAAI,CAACP,cAAc,CAAC,GAAGnB,GAAG,EAAE;MACvD,IAAI,CAACa,UAAU,GAAG,IAAI;MACtB;IACF;IAEAU,EAAE,CAACC,IAAI,CAAC,kBAAkB,EAAE;MAACX,UAAU,EAAEA;IAAU,CAAC,CAAC;IAErD,IAAI,IAAI,CAACc,IAAI,CAACnB,IAAI,KAAK,UAAU,EAAE;MACjC,IAAI,CAACe,EAAE,CAACK,YAAY,CAAC,UAAU,EAAE,IAAI,CAACT,cAAc,CAAC;MACrD,IAAI,CAACN,UAAU,GAAG,IAAI;MACtBU,EAAE,CAACC,IAAI,CAAC,gBAAgB,EAAE;QAACX,UAAU,EAAEA;MAAU,CAAC,CAAC;MACnDU,EAAE,CAACM,UAAU,CAAC,mBAAmB,CAAC,CAACC,iBAAiB,CAAC,CAAC;IACxD;EACF,CAAC;EAEDC,gBAAgB,EAAE,SAAAA,CAAA,EAAY;IAC5B,OAAO,CAAC,EAAE,IAAI,CAACnB,MAAM,IAAI,IAAI,CAACC,UAAU,CAAC;EAC3C,CAAC;EAEDmB,WAAW,EAAE,SAAAA,CAAA,EAAY;IACvB,IAAI,CAAC,IAAI,CAACpB,MAAM,EAAE;IAElB,MAAMe,IAAI,GAAG,IAAI,CAACA,IAAI;IACtB,MAAMZ,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,MAAMG,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC9B,MAAMC,cAAc,GAAG,IAAI,CAACA,cAAc;IAC1C,MAAMN,UAAU,GAAG,IAAI,CAACA,UAAU;IAElC,IAAI,CAACY,IAAI,CAAC,CAAC;IACX,IAAIP,QAAQ,CAACQ,UAAU,CAACP,cAAc,CAAC,GAAGnB,GAAG,EAAE;MAC7C,IAAI,CAACa,UAAU,GAAG,IAAI;MACtB,IAAI,CAACU,EAAE,CAACC,IAAI,CAAC,gBAAgB,EAAE;QAACX,UAAU,EAAEA;MAAU,CAAC,CAAC;MACxD,OAAOE,MAAM,CAACkB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC5B;IACAlB,MAAM,CAACmB,SAAS,CAACP,IAAI,CAACjB,YAAY,CAAC;IACnC,OAAOK,MAAM;EACf,CAAC;EAEDU,IAAI,EAAE,SAAAA,CAAA,EAAY;IAChB,MAAMV,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,MAAMG,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC9B,MAAMC,cAAc,GAAG,IAAI,CAACA,cAAc;IAE1CD,QAAQ,CAACiB,IAAI,CAAC,IAAI,CAACZ,EAAE,CAACa,YAAY,CAAC,UAAU,CAAC,CAAC;IAC/C,IAAI,CAACvB,UAAU,CAACwB,QAAQ,CAACC,gBAAgB,CAACnB,cAAc,CAAC;IACzDA,cAAc,CAACoB,GAAG,CAAC,IAAI,CAAC1B,UAAU,CAACgB,UAAU,CAAChB,UAAU,CAAC2B,SAAS,CAAC,CAAC,CAAC;IACrEzB,MAAM,CAACoB,IAAI,CAAChB,cAAc,CAAC,CAACsB,GAAG,CAACvB,QAAQ,CAAC;EAC3C;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}