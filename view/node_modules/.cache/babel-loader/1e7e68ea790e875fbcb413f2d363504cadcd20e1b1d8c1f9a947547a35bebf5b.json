{"ast":null,"code":"import { range } from \"d3-array\";\nimport { max, tau } from \"./math\";\nfunction compareValue(compare) {\n  return function (a, b) {\n    return compare(a.source.value + a.target.value, b.source.value + b.target.value);\n  };\n}\nexport default function () {\n  var padAngle = 0,\n    sortGroups = null,\n    sortSubgroups = null,\n    sortChords = null;\n  function chord(matrix) {\n    var n = matrix.length,\n      groupSums = [],\n      groupIndex = range(n),\n      subgroupIndex = [],\n      chords = [],\n      groups = chords.groups = new Array(n),\n      subgroups = new Array(n * n),\n      k,\n      x,\n      x0,\n      dx,\n      i,\n      j;\n\n    // Compute the sum.\n    k = 0, i = -1;\n    while (++i < n) {\n      x = 0, j = -1;\n      while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function (a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function (d, i) {\n      d.sort(function (a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1;\n    while (++i < n) {\n      x0 = x, j = -1;\n      while (++j < n) {\n        var di = groupIndex[i],\n          dj = subgroupIndex[di][j],\n          v = matrix[di][dj],\n          a0 = x,\n          a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1;\n    while (++i < n) {\n      j = i - 1;\n      while (++j < n) {\n        var source = subgroups[j * n + i],\n          target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value ? {\n            source: target,\n            target: source\n          } : {\n            source: source,\n            target: target\n          });\n        }\n      }\n    }\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n  chord.padAngle = function (_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n  chord.sortGroups = function (_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n  chord.sortSubgroups = function (_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n  chord.sortChords = function (_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n  return chord;\n}","map":{"version":3,"names":["range","max","tau","compareValue","compare","a","b","source","value","target","padAngle","sortGroups","sortSubgroups","sortChords","chord","matrix","n","length","groupSums","groupIndex","subgroupIndex","chords","groups","Array","subgroups","k","x","x0","dx","i","j","push","sort","forEach","d","di","dj","v","a0","a1","index","subindex","startAngle","endAngle","_","arguments"],"sources":["C:/UsersFolders/Polina/РЭУ/Graph/view/node_modules/d3-chord/src/chord.js"],"sourcesContent":["import {range} from \"d3-array\";\nimport {max, tau} from \"./math\";\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}