{"ast":null,"code":"import { bisector, tickStep } from \"d3-array\";\nimport { timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond } from \"d3-time\";\nimport { timeFormat } from \"d3-time-format\";\nimport { map } from \"./array\";\nimport continuous, { copy, identity } from \"./continuous\";\nimport { initRange } from \"./init\";\nimport nice from \"./nice\";\nvar durationSecond = 1000,\n  durationMinute = durationSecond * 60,\n  durationHour = durationMinute * 60,\n  durationDay = durationHour * 24,\n  durationWeek = durationDay * 7,\n  durationMonth = durationDay * 30,\n  durationYear = durationDay * 365;\nfunction date(t) {\n  return new Date(t);\n}\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(identity, identity),\n    invert = scale.invert,\n    domain = scale.domain;\n  var formatMillisecond = format(\".%L\"),\n    formatSecond = format(\":%S\"),\n    formatMinute = format(\"%I:%M\"),\n    formatHour = format(\"%I %p\"),\n    formatDay = format(\"%a %d\"),\n    formatWeek = format(\"%b %d\"),\n    formatMonth = format(\"%B\"),\n    formatYear = format(\"%Y\");\n  var tickIntervals = [[second, 1, durationSecond], [second, 5, 5 * durationSecond], [second, 15, 15 * durationSecond], [second, 30, 30 * durationSecond], [minute, 1, durationMinute], [minute, 5, 5 * durationMinute], [minute, 15, 15 * durationMinute], [minute, 30, 30 * durationMinute], [hour, 1, durationHour], [hour, 3, 3 * durationHour], [hour, 6, 6 * durationHour], [hour, 12, 12 * durationHour], [day, 1, durationDay], [day, 2, 2 * durationDay], [week, 1, durationWeek], [month, 1, durationMonth], [month, 3, 3 * durationMonth], [year, 1, durationYear]];\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond : minute(date) < date ? formatSecond : hour(date) < date ? formatMinute : day(date) < date ? formatHour : month(date) < date ? week(date) < date ? formatDay : formatWeek : year(date) < date ? formatMonth : formatYear)(date);\n  }\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n        i = bisector(function (i) {\n          return i[2];\n        }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n    return step == null ? interval : interval.every(step);\n  }\n  scale.invert = function (y) {\n    return new Date(invert(y));\n  };\n  scale.domain = function (_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n  scale.ticks = function (interval, step) {\n    var d = domain(),\n      t0 = d[0],\n      t1 = d[d.length - 1],\n      r = t1 < t0,\n      t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n  scale.tickFormat = function (count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n  scale.nice = function (interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step)) ? domain(nice(d, interval)) : scale;\n  };\n  scale.copy = function () {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n  return scale;\n}\nexport default function () {\n  return initRange.apply(calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}","map":{"version":3,"names":["bisector","tickStep","timeYear","timeMonth","timeWeek","timeDay","timeHour","timeMinute","timeSecond","timeMillisecond","timeFormat","map","continuous","copy","identity","initRange","nice","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","durationYear","date","t","Date","number","calendar","year","month","week","day","hour","minute","second","millisecond","format","scale","invert","domain","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickFormat","tickInterval","interval","start","stop","step","target","Math","abs","i","right","length","max","every","y","_","arguments","call","ticks","d","t0","t1","r","range","reverse","count","specifier","apply"],"sources":["C:/UsersFolders/Polina/РЭУ/Graph/graph_model_midicine/view/node_modules/d3-scale/src/time.js"],"sourcesContent":["import {bisector, tickStep} from \"d3-array\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport continuous, {copy, identity} from \"./continuous\";\nimport {initRange} from \"./init\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(identity, identity),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return initRange.apply(calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}