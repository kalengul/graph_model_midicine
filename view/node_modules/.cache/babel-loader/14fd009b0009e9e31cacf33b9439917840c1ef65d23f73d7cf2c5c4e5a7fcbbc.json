{"ast":null,"code":"import { EventDispatcher, Matrix4, Plane, Raycaster, Vector2, Vector3 } from 'three';\nconst _plane = new Plane();\nconst _raycaster = new Raycaster();\nconst _pointer = new Vector2();\nconst _offset = new Vector3();\nconst _diff = new Vector2();\nconst _previousPointer = new Vector2();\nconst _intersection = new Vector3();\nconst _worldPosition = new Vector3();\nconst _inverseMatrix = new Matrix4();\nconst _up = new Vector3();\nconst _right = new Vector3();\nclass DragControls extends EventDispatcher {\n  constructor(_objects, _camera, _domElement) {\n    super();\n    _domElement.style.touchAction = 'none'; // disable touch scroll\n\n    let _selected = null,\n      _hovered = null;\n    const _intersections = [];\n    this.mode = 'translate';\n    this.rotateSpeed = 1;\n\n    //\n\n    const scope = this;\n    function activate() {\n      _domElement.addEventListener('pointermove', onPointerMove);\n      _domElement.addEventListener('pointerdown', onPointerDown);\n      _domElement.addEventListener('pointerup', onPointerCancel);\n      _domElement.addEventListener('pointerleave', onPointerCancel);\n    }\n    function deactivate() {\n      _domElement.removeEventListener('pointermove', onPointerMove);\n      _domElement.removeEventListener('pointerdown', onPointerDown);\n      _domElement.removeEventListener('pointerup', onPointerCancel);\n      _domElement.removeEventListener('pointerleave', onPointerCancel);\n      _domElement.style.cursor = '';\n    }\n    function dispose() {\n      deactivate();\n    }\n    function getObjects() {\n      return _objects;\n    }\n    function setObjects(objects) {\n      _objects = objects;\n    }\n    function getRaycaster() {\n      return _raycaster;\n    }\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n      updatePointer(event);\n      _raycaster.setFromCamera(_pointer, _camera);\n      if (_selected) {\n        if (scope.mode === 'translate') {\n          if (_raycaster.ray.intersectPlane(_plane, _intersection)) {\n            _selected.position.copy(_intersection.sub(_offset).applyMatrix4(_inverseMatrix));\n          }\n        } else if (scope.mode === 'rotate') {\n          _diff.subVectors(_pointer, _previousPointer).multiplyScalar(scope.rotateSpeed);\n          _selected.rotateOnWorldAxis(_up, _diff.x);\n          _selected.rotateOnWorldAxis(_right.normalize(), -_diff.y);\n        }\n        scope.dispatchEvent({\n          type: 'drag',\n          object: _selected\n        });\n        _previousPointer.copy(_pointer);\n      } else {\n        // hover support\n\n        if (event.pointerType === 'mouse' || event.pointerType === 'pen') {\n          _intersections.length = 0;\n          _raycaster.setFromCamera(_pointer, _camera);\n          _raycaster.intersectObjects(_objects, scope.recursive, _intersections);\n          if (_intersections.length > 0) {\n            const object = _intersections[0].object;\n            _plane.setFromNormalAndCoplanarPoint(_camera.getWorldDirection(_plane.normal), _worldPosition.setFromMatrixPosition(object.matrixWorld));\n            if (_hovered !== object && _hovered !== null) {\n              scope.dispatchEvent({\n                type: 'hoveroff',\n                object: _hovered\n              });\n              _domElement.style.cursor = 'auto';\n              _hovered = null;\n            }\n            if (_hovered !== object) {\n              scope.dispatchEvent({\n                type: 'hoveron',\n                object: object\n              });\n              _domElement.style.cursor = 'pointer';\n              _hovered = object;\n            }\n          } else {\n            if (_hovered !== null) {\n              scope.dispatchEvent({\n                type: 'hoveroff',\n                object: _hovered\n              });\n              _domElement.style.cursor = 'auto';\n              _hovered = null;\n            }\n          }\n        }\n      }\n      _previousPointer.copy(_pointer);\n    }\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n      updatePointer(event);\n      _intersections.length = 0;\n      _raycaster.setFromCamera(_pointer, _camera);\n      _raycaster.intersectObjects(_objects, scope.recursive, _intersections);\n      if (_intersections.length > 0) {\n        if (scope.transformGroup === true) {\n          // look for the outermost group in the object's upper hierarchy\n\n          _selected = findGroup(_intersections[0].object);\n        } else {\n          _selected = _intersections[0].object;\n        }\n        _plane.setFromNormalAndCoplanarPoint(_camera.getWorldDirection(_plane.normal), _worldPosition.setFromMatrixPosition(_selected.matrixWorld));\n        if (_raycaster.ray.intersectPlane(_plane, _intersection)) {\n          if (scope.mode === 'translate') {\n            _inverseMatrix.copy(_selected.parent.matrixWorld).invert();\n            _offset.copy(_intersection).sub(_worldPosition.setFromMatrixPosition(_selected.matrixWorld));\n          } else if (scope.mode === 'rotate') {\n            // the controls only support Y+ up\n            _up.set(0, 1, 0).applyQuaternion(_camera.quaternion).normalize();\n            _right.set(1, 0, 0).applyQuaternion(_camera.quaternion).normalize();\n          }\n        }\n        _domElement.style.cursor = 'move';\n        scope.dispatchEvent({\n          type: 'dragstart',\n          object: _selected\n        });\n      }\n      _previousPointer.copy(_pointer);\n    }\n    function onPointerCancel() {\n      if (scope.enabled === false) return;\n      if (_selected) {\n        scope.dispatchEvent({\n          type: 'dragend',\n          object: _selected\n        });\n        _selected = null;\n      }\n      _domElement.style.cursor = _hovered ? 'pointer' : 'auto';\n    }\n    function updatePointer(event) {\n      const rect = _domElement.getBoundingClientRect();\n      _pointer.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n      _pointer.y = -(event.clientY - rect.top) / rect.height * 2 + 1;\n    }\n    function findGroup(obj, group = null) {\n      if (obj.isGroup) group = obj;\n      if (obj.parent === null) return group;\n      return findGroup(obj.parent, group);\n    }\n    activate();\n\n    // API\n\n    this.enabled = true;\n    this.recursive = true;\n    this.transformGroup = false;\n    this.activate = activate;\n    this.deactivate = deactivate;\n    this.dispose = dispose;\n    this.getObjects = getObjects;\n    this.getRaycaster = getRaycaster;\n    this.setObjects = setObjects;\n  }\n}\nexport { DragControls };","map":{"version":3,"names":["EventDispatcher","Matrix4","Plane","Raycaster","Vector2","Vector3","_plane","_raycaster","_pointer","_offset","_diff","_previousPointer","_intersection","_worldPosition","_inverseMatrix","_up","_right","DragControls","constructor","_objects","_camera","_domElement","style","touchAction","_selected","_hovered","_intersections","mode","rotateSpeed","scope","activate","addEventListener","onPointerMove","onPointerDown","onPointerCancel","deactivate","removeEventListener","cursor","dispose","getObjects","setObjects","objects","getRaycaster","event","enabled","updatePointer","setFromCamera","ray","intersectPlane","position","copy","sub","applyMatrix4","subVectors","multiplyScalar","rotateOnWorldAxis","x","normalize","y","dispatchEvent","type","object","pointerType","length","intersectObjects","recursive","setFromNormalAndCoplanarPoint","getWorldDirection","normal","setFromMatrixPosition","matrixWorld","transformGroup","findGroup","parent","invert","set","applyQuaternion","quaternion","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","obj","group","isGroup"],"sources":["C:/UsersFolders/Polina/РЭУ/Graph/view/node_modules/three/examples/jsm/controls/DragControls.js"],"sourcesContent":["import {\n\tEventDispatcher,\n\tMatrix4,\n\tPlane,\n\tRaycaster,\n\tVector2,\n\tVector3\n} from 'three';\n\nconst _plane = new Plane();\nconst _raycaster = new Raycaster();\n\nconst _pointer = new Vector2();\nconst _offset = new Vector3();\nconst _diff = new Vector2();\nconst _previousPointer = new Vector2();\nconst _intersection = new Vector3();\nconst _worldPosition = new Vector3();\nconst _inverseMatrix = new Matrix4();\n\nconst _up = new Vector3();\nconst _right = new Vector3();\n\nclass DragControls extends EventDispatcher {\n\n\tconstructor( _objects, _camera, _domElement ) {\n\n\t\tsuper();\n\n\t\t_domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\tlet _selected = null, _hovered = null;\n\n\t\tconst _intersections = [];\n\n\t\tthis.mode = 'translate';\n\n\t\tthis.rotateSpeed = 1;\n\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tfunction activate() {\n\n\t\t\t_domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t_domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\t\t_domElement.addEventListener( 'pointerup', onPointerCancel );\n\t\t\t_domElement.addEventListener( 'pointerleave', onPointerCancel );\n\n\t\t}\n\n\t\tfunction deactivate() {\n\n\t\t\t_domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t_domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\t_domElement.removeEventListener( 'pointerup', onPointerCancel );\n\t\t\t_domElement.removeEventListener( 'pointerleave', onPointerCancel );\n\n\t\t\t_domElement.style.cursor = '';\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tdeactivate();\n\n\t\t}\n\n\t\tfunction getObjects() {\n\n\t\t\treturn _objects;\n\n\t\t}\n\n\t\tfunction setObjects( objects ) {\n\n\t\t\t_objects = objects;\n\n\t\t}\n\n\t\tfunction getRaycaster() {\n\n\t\t\treturn _raycaster;\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tupdatePointer( event );\n\n\t\t\t_raycaster.setFromCamera( _pointer, _camera );\n\n\t\t\tif ( _selected ) {\n\n\t\t\t\tif ( scope.mode === 'translate' ) {\n\n\t\t\t\t\tif ( _raycaster.ray.intersectPlane( _plane, _intersection ) ) {\n\n\t\t\t\t\t\t_selected.position.copy( _intersection.sub( _offset ).applyMatrix4( _inverseMatrix ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( scope.mode === 'rotate' ) {\n\n\t\t\t\t\t_diff.subVectors( _pointer, _previousPointer ).multiplyScalar( scope.rotateSpeed );\n\t\t\t\t\t_selected.rotateOnWorldAxis( _up, _diff.x );\n\t\t\t\t\t_selected.rotateOnWorldAxis( _right.normalize(), - _diff.y );\n\n\t\t\t\t}\n\n\t\t\t\tscope.dispatchEvent( { type: 'drag', object: _selected } );\n\n\t\t\t\t_previousPointer.copy( _pointer );\n\n\t\t\t} else {\n\n\t\t\t\t// hover support\n\n\t\t\t\tif ( event.pointerType === 'mouse' || event.pointerType === 'pen' ) {\n\n\t\t\t\t\t_intersections.length = 0;\n\n\t\t\t\t\t_raycaster.setFromCamera( _pointer, _camera );\n\t\t\t\t\t_raycaster.intersectObjects( _objects, scope.recursive, _intersections );\n\n\t\t\t\t\tif ( _intersections.length > 0 ) {\n\n\t\t\t\t\t\tconst object = _intersections[ 0 ].object;\n\n\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( _camera.getWorldDirection( _plane.normal ), _worldPosition.setFromMatrixPosition( object.matrixWorld ) );\n\n\t\t\t\t\t\tif ( _hovered !== object && _hovered !== null ) {\n\n\t\t\t\t\t\t\tscope.dispatchEvent( { type: 'hoveroff', object: _hovered } );\n\n\t\t\t\t\t\t\t_domElement.style.cursor = 'auto';\n\t\t\t\t\t\t\t_hovered = null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( _hovered !== object ) {\n\n\t\t\t\t\t\t\tscope.dispatchEvent( { type: 'hoveron', object: object } );\n\n\t\t\t\t\t\t\t_domElement.style.cursor = 'pointer';\n\t\t\t\t\t\t\t_hovered = object;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( _hovered !== null ) {\n\n\t\t\t\t\t\t\tscope.dispatchEvent( { type: 'hoveroff', object: _hovered } );\n\n\t\t\t\t\t\t\t_domElement.style.cursor = 'auto';\n\t\t\t\t\t\t\t_hovered = null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_previousPointer.copy( _pointer );\n\n\t\t}\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tupdatePointer( event );\n\n\t\t\t_intersections.length = 0;\n\n\t\t\t_raycaster.setFromCamera( _pointer, _camera );\n\t\t\t_raycaster.intersectObjects( _objects, scope.recursive, _intersections );\n\n\t\t\tif ( _intersections.length > 0 ) {\n\n\t\t\t\tif ( scope.transformGroup === true ) {\n\n\t\t\t\t\t// look for the outermost group in the object's upper hierarchy\n\n\t\t\t\t\t_selected = findGroup( _intersections[ 0 ].object );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_selected = _intersections[ 0 ].object;\n\n\t\t\t\t}\n\n\t\t\t\t_plane.setFromNormalAndCoplanarPoint( _camera.getWorldDirection( _plane.normal ), _worldPosition.setFromMatrixPosition( _selected.matrixWorld ) );\n\n\t\t\t\tif ( _raycaster.ray.intersectPlane( _plane, _intersection ) ) {\n\n\t\t\t\t\tif ( scope.mode === 'translate' ) {\n\n\t\t\t\t\t\t_inverseMatrix.copy( _selected.parent.matrixWorld ).invert();\n\t\t\t\t\t\t_offset.copy( _intersection ).sub( _worldPosition.setFromMatrixPosition( _selected.matrixWorld ) );\n\n\t\t\t\t\t} else if ( scope.mode === 'rotate' ) {\n\n\t\t\t\t\t\t// the controls only support Y+ up\n\t\t\t\t\t\t_up.set( 0, 1, 0 ).applyQuaternion( _camera.quaternion ).normalize();\n\t\t\t\t\t\t_right.set( 1, 0, 0 ).applyQuaternion( _camera.quaternion ).normalize();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_domElement.style.cursor = 'move';\n\n\t\t\t\tscope.dispatchEvent( { type: 'dragstart', object: _selected } );\n\n\t\t\t}\n\n\t\t\t_previousPointer.copy( _pointer );\n\n\t\t}\n\n\t\tfunction onPointerCancel() {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( _selected ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'dragend', object: _selected } );\n\n\t\t\t\t_selected = null;\n\n\t\t\t}\n\n\t\t\t_domElement.style.cursor = _hovered ? 'pointer' : 'auto';\n\n\t\t}\n\n\t\tfunction updatePointer( event ) {\n\n\t\t\tconst rect = _domElement.getBoundingClientRect();\n\n\t\t\t_pointer.x = ( event.clientX - rect.left ) / rect.width * 2 - 1;\n\t\t\t_pointer.y = - ( event.clientY - rect.top ) / rect.height * 2 + 1;\n\n\t\t}\n\n\t\tfunction findGroup( obj, group = null ) {\n\n\t\t\tif ( obj.isGroup ) group = obj;\n\n\t\t\tif ( obj.parent === null ) return group;\n\n\t\t\treturn findGroup( obj.parent, group );\n\n\t\t}\n\n\t\tactivate();\n\n\t\t// API\n\n\t\tthis.enabled = true;\n\t\tthis.recursive = true;\n\t\tthis.transformGroup = false;\n\n\t\tthis.activate = activate;\n\t\tthis.deactivate = deactivate;\n\t\tthis.dispose = dispose;\n\t\tthis.getObjects = getObjects;\n\t\tthis.getRaycaster = getRaycaster;\n\t\tthis.setObjects = setObjects;\n\n\t}\n\n}\n\nexport { DragControls };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}