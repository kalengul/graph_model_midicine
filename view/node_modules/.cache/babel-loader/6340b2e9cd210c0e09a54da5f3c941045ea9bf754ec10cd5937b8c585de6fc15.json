{"ast":null,"code":"var _jsxFileName = \"C:\\\\UsersFolders\\\\Polina\\\\\\u0420\\u042D\\u0423\\\\Graph\\\\view\\\\src\\\\App.js\";\nimport { Nav } from \"./components/nav/nav\";\nimport { GraphView } from \"./components/graph/graph\";\nimport { Graph } from 'react-d3-graph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  nodes: [{\n    id: 'Harry'\n  }, {\n    id: 'Sally'\n  }, {\n    id: 'Alice'\n  }],\n  links: [{\n    source: 'Harry',\n    target: 'Sally'\n  }, {\n    source: 'Harry',\n    target: 'Alice'\n  }]\n};\nconst myConfig = {\n  nodeHighlightBehavior: true,\n  node: {\n    color: 'lightgreen',\n    size: 120,\n    highlightStrokeColor: 'blue'\n  },\n  link: {\n    highlightColor: 'lightblue'\n  }\n};\n\n// Callback to handle click on the graph.\n// @param {Object} event click dom event\nconst onClickGraph = function (event) {\n  window.alert('Clicked the graph background');\n};\nconst onClickNode = function (nodeId, node) {\n  window.alert('Clicked node ${nodeId} in position (${node.x}, ${node.y})');\n};\nconst onDoubleClickNode = function (nodeId, node) {\n  window.alert('Double clicked node ${nodeId} in position (${node.x}, ${node.y})');\n};\nconst onRightClickNode = function (event, nodeId, node) {\n  window.alert('Right clicked node ${nodeId} in position (${node.x}, ${node.y})');\n};\nconst onMouseOverNode = function (nodeId, node) {\n  window.alert(`Mouse over node ${nodeId} in position (${node.x}, ${node.y})`);\n};\nconst onMouseOutNode = function (nodeId, node) {\n  window.alert(`Mouse out node ${nodeId} in position (${node.x}, ${node.y})`);\n};\nconst onClickLink = function (source, target) {\n  window.alert(`Clicked link between ${source} and ${target}`);\n};\nconst onRightClickLink = function (event, source, target) {\n  window.alert('Right clicked link between ${source} and ${target}');\n};\nconst onMouseOverLink = function (source, target) {\n  window.alert(`Mouse over in link between ${source} and ${target}`);\n};\nconst onMouseOutLink = function (source, target) {\n  window.alert(`Mouse out link between ${source} and ${target}`);\n};\nconst onNodePositionChange = function (nodeId, x, y) {\n  window.alert(`Node ${nodeId} moved to new position x= ${x} y= ${y}`);\n};\n\n// Callback that's called whenever the graph is zoomed in/out\n// @param {number} previousZoom the previous graph zoom\n// @param {number} newZoom the new graph zoom\nconst onZoomChange = function (previousZoom, newZoom) {\n  window.alert(`Graph is now zoomed at ${newZoom} from ${previousZoom}`);\n};\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Graph, {\n    id: \"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n    ,\n    data: data,\n    config: myConfig,\n    onClickGraph: onClickGraph,\n    onClickNode: onClickNode,\n    onDoubleClickNode: onDoubleClickNode,\n    onRightClickNode: onRightClickNode,\n    onClickLink: onClickLink,\n    onRightClickLink: onRightClickLink,\n    onMouseOverNode: onMouseOverNode,\n    onMouseOutNode: onMouseOutNode,\n    onMouseOverLink: onMouseOverLink,\n    onMouseOutLink: onMouseOutLink,\n    onNodePositionChange: onNodePositionChange,\n    onZoomChange: onZoomChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Nav","GraphView","Graph","jsxDEV","_jsxDEV","data","nodes","id","links","source","target","myConfig","nodeHighlightBehavior","node","color","size","highlightStrokeColor","link","highlightColor","onClickGraph","event","window","alert","onClickNode","nodeId","onDoubleClickNode","onRightClickNode","onMouseOverNode","x","y","onMouseOutNode","onClickLink","onRightClickLink","onMouseOverLink","onMouseOutLink","onNodePositionChange","onZoomChange","previousZoom","newZoom","App","config","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/UsersFolders/Polina/РЭУ/Graph/view/src/App.js"],"sourcesContent":["import { Nav } from \"./components/nav/nav\";\nimport { GraphView } from \"./components/graph/graph\";\n\nimport { Graph } from  'react-d3-graph' ;\n\nconst data = {\n  nodes: [\n    {id: 'Harry'},\n    {id: 'Sally'},\n    {id: 'Alice'}\n  ],\n  links: [\n      {source: 'Harry', target: 'Sally'},\n      {source: 'Harry', target: 'Alice'},\n  ]\n};\nconst myConfig = {\n  nodeHighlightBehavior: true,\n  node: {\n      color: 'lightgreen',\n      size: 120,\n      highlightStrokeColor: 'blue'\n  },\n  link: {\n      highlightColor: 'lightblue'\n  }\n};\n\n// Callback to handle click on the graph.\n// @param {Object} event click dom event\nconst onClickGraph = function(event) {\n   window.alert('Clicked the graph background');\n};\n\nconst onClickNode = function(nodeId, node) {\n   window.alert('Clicked node ${nodeId} in position (${node.x}, ${node.y})');\n};\n\nconst onDoubleClickNode = function(nodeId, node) {\n   window.alert('Double clicked node ${nodeId} in position (${node.x}, ${node.y})');\n};\n\nconst onRightClickNode = function(event, nodeId, node) {\n   window.alert('Right clicked node ${nodeId} in position (${node.x}, ${node.y})');\n};\n\nconst onMouseOverNode = function(nodeId, node) {\n   window.alert(`Mouse over node ${nodeId} in position (${node.x}, ${node.y})`);\n};\n\nconst onMouseOutNode = function(nodeId, node) {\n   window.alert(`Mouse out node ${nodeId} in position (${node.x}, ${node.y})`);\n};\n\nconst onClickLink = function(source, target) {\n   window.alert(`Clicked link between ${source} and ${target}`);\n};\n\nconst onRightClickLink = function(event, source, target) {\n   window.alert('Right clicked link between ${source} and ${target}');\n};\n\nconst onMouseOverLink = function(source, target) {\n   window.alert(`Mouse over in link between ${source} and ${target}`);\n};\n\nconst onMouseOutLink = function(source, target) {\n   window.alert(`Mouse out link between ${source} and ${target}`);\n};\n\nconst onNodePositionChange = function(nodeId, x, y) {\n   window.alert(`Node ${nodeId} moved to new position x= ${x} y= ${y}`);\n};\n\n// Callback that's called whenever the graph is zoomed in/out\n// @param {number} previousZoom the previous graph zoom\n// @param {number} newZoom the new graph zoom\nconst onZoomChange = function(previousZoom, newZoom) {\n   window.alert(`Graph is now zoomed at ${newZoom} from ${previousZoom}`);\n};\n\n\nfunction App() {\n  return (\n    <Graph\n    id='graph-id' // id is mandatory, if no id is defined rd3g will throw an error\n    data={data}\n    config={myConfig}\n    onClickGraph={onClickGraph}\n    onClickNode={onClickNode}\n    onDoubleClickNode={onDoubleClickNode}\n    onRightClickNode={onRightClickNode}\n    onClickLink={onClickLink}\n    onRightClickLink={onRightClickLink}\n    onMouseOverNode={onMouseOverNode}\n    onMouseOutNode={onMouseOutNode}\n    onMouseOverLink={onMouseOverLink}\n    onMouseOutLink={onMouseOutLink}\n    onNodePositionChange={onNodePositionChange}\n    onZoomChange={onZoomChange}/>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}