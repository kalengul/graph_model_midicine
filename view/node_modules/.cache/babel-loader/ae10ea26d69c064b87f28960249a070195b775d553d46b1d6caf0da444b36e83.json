{"ast":null,"code":"module.exports = AFRAME.registerComponent('nav-agent', {\n  schema: {\n    destination: {\n      type: 'vec3'\n    },\n    active: {\n      default: false\n    },\n    speed: {\n      default: 2\n    }\n  },\n  init: function () {\n    this.system = this.el.sceneEl.systems.nav;\n    this.system.addAgent(this);\n    this.group = null;\n    this.path = [];\n    this.raycaster = new THREE.Raycaster();\n  },\n  remove: function () {\n    this.system.removeAgent(this);\n  },\n  update: function () {\n    this.path.length = 0;\n  },\n  updateNavLocation: function () {\n    this.group = null;\n    this.path = [];\n  },\n  tick: function () {\n    const vDest = new THREE.Vector3();\n    const vDelta = new THREE.Vector3();\n    const vNext = new THREE.Vector3();\n    return function (t, dt) {\n      const el = this.el;\n      const data = this.data;\n      const raycaster = this.raycaster;\n      const speed = data.speed * dt / 1000;\n      if (!data.active) return;\n\n      // Use PatrolJS pathfinding system to get shortest path to target.\n      if (!this.path.length) {\n        const position = this.el.object3D.position;\n        this.group = this.group || this.system.getGroup(position);\n        this.path = this.system.getPath(position, vDest.copy(data.destination), this.group) || [];\n        el.emit('navigation-start');\n      }\n\n      // If no path is found, exit.\n      if (!this.path.length) {\n        console.warn('[nav] Unable to find path to %o.', data.destination);\n        this.el.setAttribute('nav-agent', {\n          active: false\n        });\n        el.emit('navigation-end');\n        return;\n      }\n\n      // Current segment is a vector from current position to next waypoint.\n      const vCurrent = el.object3D.position;\n      const vWaypoint = this.path[0];\n      vDelta.subVectors(vWaypoint, vCurrent);\n      const distance = vDelta.length();\n      let gazeTarget;\n      if (distance < speed) {\n        // If <1 step from current waypoint, discard it and move toward next.\n        this.path.shift();\n\n        // After discarding the last waypoint, exit pathfinding.\n        if (!this.path.length) {\n          this.el.setAttribute('nav-agent', {\n            active: false\n          });\n          el.emit('navigation-end');\n          return;\n        }\n        vNext.copy(vCurrent);\n        gazeTarget = this.path[0];\n      } else {\n        // If still far away from next waypoint, find next position for\n        // the current frame.\n        vNext.copy(vDelta.setLength(speed)).add(vCurrent);\n        gazeTarget = vWaypoint;\n      }\n\n      // Look at the next waypoint.\n      gazeTarget.y = vCurrent.y;\n      el.object3D.lookAt(gazeTarget);\n\n      // Raycast against the nav mesh, to keep the agent moving along the\n      // ground, not traveling in a straight line from higher to lower waypoints.\n      raycaster.ray.origin.copy(vNext);\n      raycaster.ray.origin.y += 1.5;\n      raycaster.ray.direction = {\n        x: 0,\n        y: -1,\n        z: 0\n      };\n      const intersections = raycaster.intersectObject(this.system.getNavMesh());\n      if (!intersections.length) {\n        // Raycasting failed. Step toward the waypoint and hope for the best.\n        vCurrent.copy(vNext);\n      } else {\n        // Re-project next position onto nav mesh.\n        vDelta.subVectors(intersections[0].point, vCurrent);\n        vCurrent.add(vDelta.setLength(speed));\n      }\n    };\n  }()\n});","map":{"version":3,"names":["module","exports","AFRAME","registerComponent","schema","destination","type","active","default","speed","init","system","el","sceneEl","systems","nav","addAgent","group","path","raycaster","THREE","Raycaster","remove","removeAgent","update","length","updateNavLocation","tick","vDest","Vector3","vDelta","vNext","t","dt","data","position","object3D","getGroup","getPath","copy","emit","console","warn","setAttribute","vCurrent","vWaypoint","subVectors","distance","gazeTarget","shift","setLength","add","y","lookAt","ray","origin","direction","x","z","intersections","intersectObject","getNavMesh","point"],"sources":["C:/UsersFolders/Polina/РЭУ/Graph/view/node_modules/aframe-extras/src/pathfinding/nav-agent.js"],"sourcesContent":["module.exports = AFRAME.registerComponent('nav-agent', {\n  schema: {\n    destination: {type: 'vec3'},\n    active: {default: false},\n    speed: {default: 2}\n  },\n  init: function () {\n    this.system = this.el.sceneEl.systems.nav;\n    this.system.addAgent(this);\n    this.group = null;\n    this.path = [];\n    this.raycaster = new THREE.Raycaster();\n  },\n  remove: function () {\n    this.system.removeAgent(this);\n  },\n  update: function () {\n    this.path.length = 0;\n  },\n  updateNavLocation: function () {\n    this.group = null;\n    this.path = [];\n  },\n  tick: (function () {\n    const vDest = new THREE.Vector3();\n    const vDelta = new THREE.Vector3();\n    const vNext = new THREE.Vector3();\n\n    return function (t, dt) {\n      const el = this.el;\n      const data = this.data;\n      const raycaster = this.raycaster;\n      const speed = data.speed * dt / 1000;\n\n      if (!data.active) return;\n\n      // Use PatrolJS pathfinding system to get shortest path to target.\n      if (!this.path.length) {\n        const position = this.el.object3D.position;\n        this.group = this.group || this.system.getGroup(position);\n        this.path = this.system.getPath(position, vDest.copy(data.destination), this.group) || [];\n        el.emit('navigation-start');\n      }\n\n      // If no path is found, exit.\n      if (!this.path.length) {\n        console.warn('[nav] Unable to find path to %o.', data.destination);\n        this.el.setAttribute('nav-agent', {active: false});\n        el.emit('navigation-end');\n        return;\n      }\n\n      // Current segment is a vector from current position to next waypoint.\n      const vCurrent = el.object3D.position;\n      const vWaypoint = this.path[0];\n      vDelta.subVectors(vWaypoint, vCurrent);\n\n      const distance = vDelta.length();\n      let gazeTarget;\n\n      if (distance < speed) {\n        // If <1 step from current waypoint, discard it and move toward next.\n        this.path.shift();\n\n        // After discarding the last waypoint, exit pathfinding.\n        if (!this.path.length) {\n          this.el.setAttribute('nav-agent', {active: false});\n          el.emit('navigation-end');\n          return;\n        }\n\n        vNext.copy(vCurrent);\n        gazeTarget = this.path[0];\n      } else {\n        // If still far away from next waypoint, find next position for\n        // the current frame.\n        vNext.copy(vDelta.setLength(speed)).add(vCurrent);\n        gazeTarget = vWaypoint;\n      }\n\n      // Look at the next waypoint.\n      gazeTarget.y = vCurrent.y;\n      el.object3D.lookAt(gazeTarget);\n\n      // Raycast against the nav mesh, to keep the agent moving along the\n      // ground, not traveling in a straight line from higher to lower waypoints.\n      raycaster.ray.origin.copy(vNext);\n      raycaster.ray.origin.y += 1.5;\n      raycaster.ray.direction = {x:0, y:-1, z:0};\n      const intersections = raycaster.intersectObject(this.system.getNavMesh());\n\n      if (!intersections.length) {\n        // Raycasting failed. Step toward the waypoint and hope for the best.\n        vCurrent.copy(vNext);\n      } else {\n        // Re-project next position onto nav mesh.\n        vDelta.subVectors(intersections[0].point, vCurrent);\n        vCurrent.add(vDelta.setLength(speed));\n      }\n\n    };\n  }())\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}