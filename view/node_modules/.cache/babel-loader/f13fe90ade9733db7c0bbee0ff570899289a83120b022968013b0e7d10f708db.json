{"ast":null,"code":"import { map } from \"d3-collection\";\nimport { slice } from \"./array\";\nimport { initRange } from \"./init\";\nexport var implicit = {\n  name: \"implicit\"\n};\nexport default function ordinal() {\n  var index = map(),\n    domain = [],\n    range = [],\n    unknown = implicit;\n  function scale(d) {\n    var key = d + \"\",\n      i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n  scale.domain = function (_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1,\n      n = _.length,\n      d,\n      key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n  scale.range = function (_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n  scale.copy = function () {\n    return ordinal(domain, range).unknown(unknown);\n  };\n  initRange.apply(scale, arguments);\n  return scale;\n}","map":{"version":3,"names":["map","slice","initRange","implicit","name","ordinal","index","domain","range","unknown","scale","d","key","i","get","set","push","length","_","arguments","n","has","call","copy","apply"],"sources":["C:/UsersFolders/Polina/РЭУ/Graph/view/node_modules/d3-scale/src/ordinal.js"],"sourcesContent":["import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\nimport {initRange} from \"./init\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal() {\n  var index = map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n"],"mappings":"AAAA,SAAQA,GAAG,QAAO,eAAe;AACjC,SAAQC,KAAK,QAAO,SAAS;AAC7B,SAAQC,SAAS,QAAO,QAAQ;AAEhC,OAAO,IAAIC,QAAQ,GAAG;EAACC,IAAI,EAAE;AAAU,CAAC;AAExC,eAAe,SAASC,OAAOA,CAAA,EAAG;EAChC,IAAIC,KAAK,GAAGN,GAAG,CAAC,CAAC;IACbO,MAAM,GAAG,EAAE;IACXC,KAAK,GAAG,EAAE;IACVC,OAAO,GAAGN,QAAQ;EAEtB,SAASO,KAAKA,CAACC,CAAC,EAAE;IAChB,IAAIC,GAAG,GAAGD,CAAC,GAAG,EAAE;MAAEE,CAAC,GAAGP,KAAK,CAACQ,GAAG,CAACF,GAAG,CAAC;IACpC,IAAI,CAACC,CAAC,EAAE;MACN,IAAIJ,OAAO,KAAKN,QAAQ,EAAE,OAAOM,OAAO;MACxCH,KAAK,CAACS,GAAG,CAACH,GAAG,EAAEC,CAAC,GAAGN,MAAM,CAACS,IAAI,CAACL,CAAC,CAAC,CAAC;IACpC;IACA,OAAOH,KAAK,CAAC,CAACK,CAAC,GAAG,CAAC,IAAIL,KAAK,CAACS,MAAM,CAAC;EACtC;EAEAP,KAAK,CAACH,MAAM,GAAG,UAASW,CAAC,EAAE;IACzB,IAAI,CAACC,SAAS,CAACF,MAAM,EAAE,OAAOV,MAAM,CAACN,KAAK,CAAC,CAAC;IAC5CM,MAAM,GAAG,EAAE,EAAED,KAAK,GAAGN,GAAG,CAAC,CAAC;IAC1B,IAAIa,CAAC,GAAG,CAAC,CAAC;MAAEO,CAAC,GAAGF,CAAC,CAACD,MAAM;MAAEN,CAAC;MAAEC,GAAG;IAChC,OAAO,EAAEC,CAAC,GAAGO,CAAC,EAAE,IAAI,CAACd,KAAK,CAACe,GAAG,CAACT,GAAG,GAAG,CAACD,CAAC,GAAGO,CAAC,CAACL,CAAC,CAAC,IAAI,EAAE,CAAC,EAAEP,KAAK,CAACS,GAAG,CAACH,GAAG,EAAEL,MAAM,CAACS,IAAI,CAACL,CAAC,CAAC,CAAC;IACrF,OAAOD,KAAK;EACd,CAAC;EAEDA,KAAK,CAACF,KAAK,GAAG,UAASU,CAAC,EAAE;IACxB,OAAOC,SAAS,CAACF,MAAM,IAAIT,KAAK,GAAGP,KAAK,CAACqB,IAAI,CAACJ,CAAC,CAAC,EAAER,KAAK,IAAIF,KAAK,CAACP,KAAK,CAAC,CAAC;EAC1E,CAAC;EAEDS,KAAK,CAACD,OAAO,GAAG,UAASS,CAAC,EAAE;IAC1B,OAAOC,SAAS,CAACF,MAAM,IAAIR,OAAO,GAAGS,CAAC,EAAER,KAAK,IAAID,OAAO;EAC1D,CAAC;EAEDC,KAAK,CAACa,IAAI,GAAG,YAAW;IACtB,OAAOlB,OAAO,CAACE,MAAM,EAAEC,KAAK,CAAC,CAACC,OAAO,CAACA,OAAO,CAAC;EAChD,CAAC;EAEDP,SAAS,CAACsB,KAAK,CAACd,KAAK,EAAES,SAAS,CAAC;EAEjC,OAAOT,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}