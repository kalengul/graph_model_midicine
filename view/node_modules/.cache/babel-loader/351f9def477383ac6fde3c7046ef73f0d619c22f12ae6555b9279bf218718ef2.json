{"ast":null,"code":"/**\n * Movement Controls\n *\n * @author Don McCurdy <dm@donmccurdy.com>\n */\n\nconst COMPONENT_SUFFIX = '-controls';\nconst MAX_DELTA = 0.2; // ms\nconst EPS = 10e-6;\nconst MOVED = 'moved';\nmodule.exports = AFRAME.registerComponent('movement-controls', {\n  /*******************************************************************\n   * Schema\n   */\n\n  dependencies: ['rotation'],\n  schema: {\n    enabled: {\n      default: true\n    },\n    controls: {\n      default: ['gamepad', 'trackpad', 'keyboard', 'touch']\n    },\n    speed: {\n      default: 0.3,\n      min: 0\n    },\n    fly: {\n      default: false\n    },\n    constrainToNavMesh: {\n      default: false\n    },\n    camera: {\n      default: '[movement-controls] [camera]',\n      type: 'selector'\n    }\n  },\n  /*******************************************************************\n   * Lifecycle\n   */\n\n  init: function () {\n    const el = this.el;\n    if (!this.data.camera) {\n      this.data.camera = el.querySelector('[camera]');\n    }\n    this.velocityCtrl = null;\n    this.velocity = new THREE.Vector3();\n    this.heading = new THREE.Quaternion();\n    this.eventDetail = {};\n\n    // Navigation\n    this.navGroup = null;\n    this.navNode = null;\n    if (el.sceneEl.hasLoaded) {\n      this.injectControls();\n    } else {\n      el.sceneEl.addEventListener('loaded', this.injectControls.bind(this));\n    }\n  },\n  update: function (prevData) {\n    const el = this.el;\n    const data = this.data;\n    const nav = el.sceneEl.systems.nav;\n    if (el.sceneEl.hasLoaded) {\n      this.injectControls();\n    }\n    if (nav && data.constrainToNavMesh !== prevData.constrainToNavMesh) {\n      data.constrainToNavMesh ? nav.addAgent(this) : nav.removeAgent(this);\n    }\n    if (data.enabled !== prevData.enabled) {\n      // Propagate the enabled change to all controls\n      for (let i = 0; i < data.controls.length; i++) {\n        const name = data.controls[i] + COMPONENT_SUFFIX;\n        this.el.setAttribute(name, {\n          enabled: this.data.enabled\n        });\n      }\n    }\n  },\n  injectControls: function () {\n    const data = this.data;\n    for (let i = 0; i < data.controls.length; i++) {\n      const name = data.controls[i] + COMPONENT_SUFFIX;\n      this.el.setAttribute(name, {\n        enabled: this.data.enabled\n      });\n    }\n  },\n  updateNavLocation: function () {\n    this.navGroup = null;\n    this.navNode = null;\n  },\n  /*******************************************************************\n   * Tick\n   */\n\n  tick: function () {\n    const start = new THREE.Vector3();\n    const end = new THREE.Vector3();\n    const clampedEnd = new THREE.Vector3();\n    return function (t, dt) {\n      if (!dt) return;\n      const el = this.el;\n      const data = this.data;\n      if (!data.enabled) return;\n      this.updateVelocityCtrl();\n      const velocityCtrl = this.velocityCtrl;\n      const velocity = this.velocity;\n      if (!velocityCtrl) return;\n\n      // Update velocity. If FPS is too low, reset.\n      if (dt / 1000 > MAX_DELTA) {\n        velocity.set(0, 0, 0);\n      } else {\n        this.updateVelocity(dt);\n      }\n      if (data.constrainToNavMesh && velocityCtrl.isNavMeshConstrained !== false) {\n        if (velocity.lengthSq() < EPS) return;\n        start.copy(el.object3D.position);\n        end.copy(velocity).multiplyScalar(dt / 1000).add(start);\n        const nav = el.sceneEl.systems.nav;\n        this.navGroup = this.navGroup === null ? nav.getGroup(start) : this.navGroup;\n        this.navNode = this.navNode || nav.getNode(start, this.navGroup);\n        this.navNode = nav.clampStep(start, end, this.navGroup, this.navNode, clampedEnd);\n        el.object3D.position.copy(clampedEnd);\n      } else if (el.hasAttribute('velocity')) {\n        el.setAttribute('velocity', velocity);\n      } else {\n        el.object3D.position.x += velocity.x * dt / 1000;\n        el.object3D.position.y += velocity.y * dt / 1000;\n        el.object3D.position.z += velocity.z * dt / 1000;\n      }\n    };\n  }(),\n  /*******************************************************************\n   * Movement\n   */\n\n  updateVelocityCtrl: function () {\n    const data = this.data;\n    if (data.enabled) {\n      for (let i = 0, l = data.controls.length; i < l; i++) {\n        const control = this.el.components[data.controls[i] + COMPONENT_SUFFIX];\n        if (control && control.isVelocityActive()) {\n          this.velocityCtrl = control;\n          return;\n        }\n      }\n      this.velocityCtrl = null;\n    }\n  },\n  updateVelocity: function () {\n    const vector2 = new THREE.Vector2();\n    const quaternion = new THREE.Quaternion();\n    return function (dt) {\n      let dVelocity;\n      const el = this.el;\n      const control = this.velocityCtrl;\n      const velocity = this.velocity;\n      const data = this.data;\n      if (control) {\n        if (control.getVelocityDelta) {\n          dVelocity = control.getVelocityDelta(dt);\n        } else if (control.getVelocity) {\n          velocity.copy(control.getVelocity());\n          return;\n        } else if (control.getPositionDelta) {\n          velocity.copy(control.getPositionDelta(dt).multiplyScalar(1000 / dt));\n          return;\n        } else {\n          throw new Error('Incompatible movement controls: ', control);\n        }\n      }\n      if (el.hasAttribute('velocity') && !data.constrainToNavMesh) {\n        velocity.copy(this.el.getAttribute('velocity'));\n      }\n      if (dVelocity && data.enabled) {\n        const cameraEl = data.camera;\n\n        // Rotate to heading\n        quaternion.copy(cameraEl.object3D.quaternion);\n        quaternion.premultiply(el.object3D.quaternion);\n        dVelocity.applyQuaternion(quaternion);\n        const factor = dVelocity.length();\n        if (data.fly) {\n          velocity.copy(dVelocity);\n          velocity.multiplyScalar(this.data.speed * 16.66667);\n        } else {\n          vector2.set(dVelocity.x, dVelocity.z);\n          vector2.setLength(factor * this.data.speed * 16.66667);\n          velocity.x = vector2.x;\n          velocity.y = 0;\n          velocity.z = vector2.y;\n        }\n        if (velocity.x !== 0 || velocity.y !== 0 || velocity.z !== 0) {\n          this.eventDetail.velocity = velocity;\n          this.el.emit(MOVED, this.eventDetail);\n        }\n      }\n    };\n  }()\n});","map":{"version":3,"names":["COMPONENT_SUFFIX","MAX_DELTA","EPS","MOVED","module","exports","AFRAME","registerComponent","dependencies","schema","enabled","default","controls","speed","min","fly","constrainToNavMesh","camera","type","init","el","data","querySelector","velocityCtrl","velocity","THREE","Vector3","heading","Quaternion","eventDetail","navGroup","navNode","sceneEl","hasLoaded","injectControls","addEventListener","bind","update","prevData","nav","systems","addAgent","removeAgent","i","length","name","setAttribute","updateNavLocation","tick","start","end","clampedEnd","t","dt","updateVelocityCtrl","set","updateVelocity","isNavMeshConstrained","lengthSq","copy","object3D","position","multiplyScalar","add","getGroup","getNode","clampStep","hasAttribute","x","y","z","l","control","components","isVelocityActive","vector2","Vector2","quaternion","dVelocity","getVelocityDelta","getVelocity","getPositionDelta","Error","getAttribute","cameraEl","premultiply","applyQuaternion","factor","setLength","emit"],"sources":["C:/UsersFolders/Polina/РЭУ/Graph/view/node_modules/aframe-extras/src/controls/movement-controls.js"],"sourcesContent":["/**\n * Movement Controls\n *\n * @author Don McCurdy <dm@donmccurdy.com>\n */\n\nconst COMPONENT_SUFFIX = '-controls';\nconst MAX_DELTA = 0.2; // ms\nconst EPS = 10e-6;\nconst MOVED = 'moved';\n\nmodule.exports = AFRAME.registerComponent('movement-controls', {\n\n  /*******************************************************************\n   * Schema\n   */\n\n  dependencies: ['rotation'],\n\n  schema: {\n    enabled:            { default: true },\n    controls:           { default: ['gamepad', 'trackpad', 'keyboard', 'touch'] },\n    speed:              { default: 0.3, min: 0 },\n    fly:                { default: false },\n    constrainToNavMesh: { default: false },\n    camera:             { default: '[movement-controls] [camera]', type: 'selector' }\n  },\n\n  /*******************************************************************\n   * Lifecycle\n   */\n\n  init: function () {\n    const el = this.el;\n    if (!this.data.camera) {\n      this.data.camera = el.querySelector('[camera]');\n    }\n    this.velocityCtrl = null;\n\n    this.velocity = new THREE.Vector3();\n    this.heading = new THREE.Quaternion();\n    this.eventDetail = {};\n\n    // Navigation\n    this.navGroup = null;\n    this.navNode = null;\n\n    if (el.sceneEl.hasLoaded) {\n      this.injectControls();\n    } else {\n      el.sceneEl.addEventListener('loaded', this.injectControls.bind(this));\n    }\n  },\n\n  update: function (prevData) {\n    const el = this.el;\n    const data = this.data;\n    const nav = el.sceneEl.systems.nav;\n    if (el.sceneEl.hasLoaded) {\n      this.injectControls();\n    }\n    if (nav && data.constrainToNavMesh !== prevData.constrainToNavMesh) {\n      data.constrainToNavMesh\n        ? nav.addAgent(this)\n        : nav.removeAgent(this);\n    }\n    if (data.enabled !== prevData.enabled) {\n      // Propagate the enabled change to all controls\n      for (let i = 0; i < data.controls.length; i++) {\n        const name = data.controls[i] + COMPONENT_SUFFIX;\n        this.el.setAttribute(name, { enabled: this.data.enabled });\n      }\n    }\n  },\n\n  injectControls: function () {\n    const data = this.data;\n\n    for (let i = 0; i < data.controls.length; i++) {\n      const name = data.controls[i] + COMPONENT_SUFFIX;\n      this.el.setAttribute(name, { enabled: this.data.enabled });\n    }\n  },\n\n  updateNavLocation: function () {\n    this.navGroup = null;\n    this.navNode = null;\n  },\n\n  /*******************************************************************\n   * Tick\n   */\n\n  tick: (function () {\n    const start = new THREE.Vector3();\n    const end = new THREE.Vector3();\n    const clampedEnd = new THREE.Vector3();\n\n    return function (t, dt) {\n      if (!dt) return;\n\n      const el = this.el;\n      const data = this.data;\n\n      if (!data.enabled) return;\n\n      this.updateVelocityCtrl();\n      const velocityCtrl = this.velocityCtrl;\n      const velocity = this.velocity;\n\n      if (!velocityCtrl) return;\n\n      // Update velocity. If FPS is too low, reset.\n      if (dt / 1000 > MAX_DELTA) {\n        velocity.set(0, 0, 0);\n      } else {\n        this.updateVelocity(dt);\n      }\n\n      if (data.constrainToNavMesh\n          && velocityCtrl.isNavMeshConstrained !== false) {\n\n        if (velocity.lengthSq() < EPS) return;\n\n        start.copy(el.object3D.position);\n        end\n          .copy(velocity)\n          .multiplyScalar(dt / 1000)\n          .add(start);\n\n        const nav = el.sceneEl.systems.nav;\n        this.navGroup = this.navGroup === null ? nav.getGroup(start) : this.navGroup;\n        this.navNode = this.navNode || nav.getNode(start, this.navGroup);\n        this.navNode = nav.clampStep(start, end, this.navGroup, this.navNode, clampedEnd);\n        el.object3D.position.copy(clampedEnd);\n      } else if (el.hasAttribute('velocity')) {\n        el.setAttribute('velocity', velocity);\n      } else {\n        el.object3D.position.x += velocity.x * dt / 1000;\n        el.object3D.position.y += velocity.y * dt / 1000;\n        el.object3D.position.z += velocity.z * dt / 1000;\n      }\n\n    };\n  }()),\n\n  /*******************************************************************\n   * Movement\n   */\n\n  updateVelocityCtrl: function () {\n    const data = this.data;\n    if (data.enabled) {\n      for (let i = 0, l = data.controls.length; i < l; i++) {\n        const control = this.el.components[data.controls[i] + COMPONENT_SUFFIX];\n        if (control && control.isVelocityActive()) {\n          this.velocityCtrl = control;\n          return;\n        }\n      }\n      this.velocityCtrl = null;\n    }\n  },\n\n  updateVelocity: (function () {\n    const vector2 = new THREE.Vector2();\n    const quaternion = new THREE.Quaternion();\n\n    return function (dt) {\n      let dVelocity;\n      const el = this.el;\n      const control = this.velocityCtrl;\n      const velocity = this.velocity;\n      const data = this.data;\n\n      if (control) {\n        if (control.getVelocityDelta) {\n          dVelocity = control.getVelocityDelta(dt);\n        } else if (control.getVelocity) {\n          velocity.copy(control.getVelocity());\n          return;\n        } else if (control.getPositionDelta) {\n          velocity.copy(control.getPositionDelta(dt).multiplyScalar(1000 / dt));\n          return;\n        } else {\n          throw new Error('Incompatible movement controls: ', control);\n        }\n      }\n\n      if (el.hasAttribute('velocity') && !data.constrainToNavMesh) {\n        velocity.copy(this.el.getAttribute('velocity'));\n      }\n\n      if (dVelocity && data.enabled) {\n        const cameraEl = data.camera;\n\n        // Rotate to heading\n        quaternion.copy(cameraEl.object3D.quaternion);\n        quaternion.premultiply(el.object3D.quaternion);\n        dVelocity.applyQuaternion(quaternion);\n\n        const factor = dVelocity.length();\n        if (data.fly) {\n          velocity.copy(dVelocity);\n          velocity.multiplyScalar(this.data.speed * 16.66667);\n        } else {\n          vector2.set(dVelocity.x, dVelocity.z);\n          vector2.setLength(factor * this.data.speed * 16.66667);\n          velocity.x = vector2.x;\n          velocity.y = 0;\n          velocity.z = vector2.y;\n        }\n        if (velocity.x !== 0 || velocity.y !== 0 || velocity.z !== 0) {\n          this.eventDetail.velocity = velocity;\n          this.el.emit(MOVED, this.eventDetail);\n        }\n      }\n    };\n\n  }())\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}