{"ast":null,"code":"var _jsxFileName = \"C:\\\\UsersFolders\\\\Polina\\\\\\u0420\\u042D\\u0423\\\\Graph\\\\view\\\\src\\\\components\\\\graph\\\\graph.js\";\nimport { Graph } from 'react-d3-graph';\nimport { Data } from './data';\nimport './graph.css';\n\n//Конфигурация для графа\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = {\n  nodeHighlightBehavior: true,\n  node: {\n    color: 'lightgreen',\n    //size : 120 ,\n    highlightStrokeColor: 'blue'\n  },\n  link: {\n    highlightColor: 'lightblue'\n  }\n};\n\n// Обратный вызов для обработки щелчка по графику. \n//@param {Object} event click dom event \nconst onClickGraph = function (event) {\n  window.alert('Щелчок по фону графика');\n};\nconst onClickNode = function (nodeId, node) {\n  window.alert('Щелчок по узлу ${nodeId} в позиции (${node.x}, ${node.y})');\n};\nconst onDoubleClickNode = function (nodeId, node) {\n  window.alert('Двойной щелчок по узлу ${nodeId} в позиции (${node.x}, ${node.y})');\n};\nconst onRightClickNode = function (event, nodeId, node) {\n  window.alert('Щелчок правой кнопкой мыши по узлу ${nodeId} в позиции (${node.x}, ${node.y})');\n};\nconst onMouseOverNode = function (nodeId, node) {\n  window.alert(`Наведите указатель мыши на узел ${nodeId} в позиции ( ${node.x} , ${node.y} )`);\n};\nconst onMouseOutNode = function (nodeId, node) {\n  window.alert(`Мышь выводит узел ${nodeId} в позиции ( ${node.x} , ${node.y} )`);\n};\nconst onClickLink = function (source, target) {\n  window.alert(`Выбрана ссылка между ${source} и ${target} `);\n};\nconst onRightClickLink = function (event, source, target) {\n  window.alert('Ссылка, щелкнутая правой кнопкой мыши между ${source} и ${target}');\n};\nconst onMouseOverLink = function (source, target) {\n  window.alert(`Наведите указатель мыши на ссылку между ${source} и ${target} `);\n};\nconst onMouseOutLink = function (source, target) {\n  window.alert(`Ссылка мыши между ${source} и ${target} `);\n};\nconst onNodePositionChange = function (nodeId, x, y) {\n  window.alert(`Узел ${nodeId} перемещен в новую позицию x= ${x} y= ${y} `);\n}; // Обратный вызов, который вызывается всякий раз, когда масштаб графика увеличивается/уменьшается // @param {number} previousZoom — масштабирование предыдущего графика // @param {number} newZoom — масштабирование нового графика \nconst onZoomChange = function (previousZoom, newZoom) {\n  window.alert(`График теперь увеличен до ${newZoom} с ${previousZoom} `);\n};\nexport const GraphView = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Graph, {\n      id: \"graph-id\" // идентификатор является обязательным , если нет Идентификатор  определяется  RD3G ,  выбросит ошибку \n      ,\n      data: Data,\n      config: config\n      //onclickgraph = {onClickGraph} onclicknode = { onclicknode} ondoubleclicknode = {ondoubleclicknode} onrightClicknode = {onrightClicknode } onmouseovernode = {onMouseOverNode} onMouseOutNode = { onMouseOutNode } onMouseOverLink = { onMouseOverLink} onMouseOutLink = {onMouseOutLink} onNodePositionChange = {onNodePositionChange} onZoomChange = {onZoomChange}/ >    \n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_c = GraphView;\nvar _c;\n$RefreshReg$(_c, \"GraphView\");","map":{"version":3,"names":["Graph","Data","jsxDEV","_jsxDEV","config","nodeHighlightBehavior","node","color","highlightStrokeColor","link","highlightColor","onClickGraph","event","window","alert","onClickNode","nodeId","onDoubleClickNode","onRightClickNode","onMouseOverNode","x","y","onMouseOutNode","onClickLink","source","target","onRightClickLink","onMouseOverLink","onMouseOutLink","onNodePositionChange","onZoomChange","previousZoom","newZoom","GraphView","children","id","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/UsersFolders/Polina/РЭУ/Graph/view/src/components/graph/graph.js"],"sourcesContent":["import { Graph } from  'react-d3-graph' ;\r\nimport {Data} from './data'\r\nimport './graph.css'\r\n\r\n//Конфигурация для графа\r\nconst config = {\r\n    nodeHighlightBehavior : true ,\r\n     node : {\r\n         color : 'lightgreen' ,\r\n         //size : 120 ,\r\n         highlightStrokeColor : 'blue' \r\n    }, link : {\r\n         highlightColor : 'lightblue' \r\n    } \r\n}\r\n\r\n// Обратный вызов для обработки щелчка по графику. \r\n//@param {Object} event click dom event \r\nconst onClickGraph = function ( event ) {\r\n    window .alert( 'Щелчок по фону графика' ); \r\n}; \r\nconst onClickNode = function ( nodeId, node ) {\r\n    window .alert( 'Щелчок по узлу ${nodeId} в позиции (${node.x}, ${node.y})' ); \r\n}; \r\nconst onDoubleClickNode = function ( nodeId, node ) {\r\n    window .alert( 'Двойной щелчок по узлу ${nodeId} в позиции (${node.x}, ${node.y})' ); \r\n}; \r\nconst onRightClickNode = function ( event, nodeId, node ) {\r\n    window .alert( 'Щелчок правой кнопкой мыши по узлу ${nodeId} в позиции (${node.x}, ${node.y})' ); \r\n}; \r\nconst onMouseOverNode = function ( nodeId, node ){\r\n    window .alert( `Наведите указатель мыши на узел ${nodeId} в позиции ( ${node.x} , ${node.y} )` ); \r\n}; \r\nconst onMouseOutNode = function ( nodeId, node ) {\r\n    window .alert( `Мышь выводит узел ${nodeId} в позиции ( ${node.x} , ${node.y} )` ); \r\n}; \r\nconst onClickLink = function ( source, target ) {\r\n    window .alert( `Выбрана ссылка между ${source} и ${target} ` ); \r\n}; \r\nconst onRightClickLink = function ( event, source, target ) {\r\n    window .alert( 'Ссылка, щелкнутая правой кнопкой мыши между ${source} и ${target}' ); \r\n}; \r\nconst onMouseOverLink = function ( source, target ) {\r\n    window .alert( `Наведите указатель мыши на ссылку между ${source} и ${target} ` ); \r\n}; \r\nconst onMouseOutLink = function ( source, target ) {\r\n    window .alert( `Ссылка мыши между ${source} и ${target} ` ); \r\n}; \r\nconst onNodePositionChange = function ( nodeId, x, y ) {\r\n    window .alert( `Узел ${nodeId} перемещен в новую позицию x= ${x} y= ${y} ` ); \r\n}; // Обратный вызов, который вызывается всякий раз, когда масштаб графика увеличивается/уменьшается // @param {number} previousZoom — масштабирование предыдущего графика // @param {number} newZoom — масштабирование нового графика \r\nconst onZoomChange = function ( previousZoom, newZoom ) {\r\n    window .alert ( `График теперь увеличен до ${newZoom} с ${previousZoom} ` );\r\n};\r\n\r\n\r\nexport const GraphView =() =>{\r\n    return (\r\n        <div>\r\n            < Graph id = 'graph-id' // идентификатор является обязательным , если нет Идентификатор  определяется  RD3G ,  выбросит ошибку \r\n                data = {Data} config = {config} \r\n                //onclickgraph = {onClickGraph} onclicknode = { onclicknode} ondoubleclicknode = {ondoubleclicknode} onrightClicknode = {onrightClicknode } onmouseovernode = {onMouseOverNode} onMouseOutNode = { onMouseOutNode } onMouseOverLink = { onMouseOverLink} onMouseOutLink = {onMouseOutLink} onNodePositionChange = {onNodePositionChange} onZoomChange = {onZoomChange}/ >    \r\n            />\r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}