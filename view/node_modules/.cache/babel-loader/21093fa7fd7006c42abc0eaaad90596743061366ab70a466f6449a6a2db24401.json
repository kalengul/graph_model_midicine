{"ast":null,"code":"/**\n * Tube following a custom path.\n *\n * Usage:\n *\n * ```html\n * <a-tube path=\"5 0 5, 5 0 -5, -5 0 -5\" radius=\"0.5\"></a-tube>\n * ```\n */\nmodule.exports.Primitive = AFRAME.registerPrimitive('a-tube', {\n  defaultComponents: {\n    tube: {}\n  },\n  mappings: {\n    path: 'tube.path',\n    segments: 'tube.segments',\n    radius: 'tube.radius',\n    'radial-segments': 'tube.radialSegments',\n    closed: 'tube.closed'\n  }\n});\nmodule.exports.Component = AFRAME.registerComponent('tube', {\n  schema: {\n    path: {\n      default: []\n    },\n    segments: {\n      default: 64\n    },\n    radius: {\n      default: 1\n    },\n    radialSegments: {\n      default: 8\n    },\n    closed: {\n      default: false\n    }\n  },\n  init: function () {\n    const el = this.el,\n      data = this.data;\n    let material = el.components.material;\n    if (!data.path.length) {\n      console.error('[a-tube] `path` property expected but not found.');\n      return;\n    }\n    const curve = new THREE.CatmullRomCurve3(data.path.map(function (point) {\n      point = point.split(' ');\n      return new THREE.Vector3(Number(point[0]), Number(point[1]), Number(point[2]));\n    }));\n    const geometry = new THREE.TubeGeometry(curve, data.segments, data.radius, data.radialSegments, data.closed);\n    if (!material) {\n      material = {};\n      material.material = new THREE.MeshPhongMaterial();\n    }\n    this.mesh = new THREE.Mesh(geometry, material.material);\n    this.el.setObject3D('mesh', this.mesh);\n  },\n  update: function (prevData) {\n    if (!Object.keys(prevData).length) return;\n    this.remove();\n    this.init();\n  },\n  remove: function () {\n    if (this.mesh) this.el.removeObject3D('mesh');\n  }\n});","map":{"version":3,"names":["module","exports","Primitive","AFRAME","registerPrimitive","defaultComponents","tube","mappings","path","segments","radius","closed","Component","registerComponent","schema","default","radialSegments","init","el","data","material","components","length","console","error","curve","THREE","CatmullRomCurve3","map","point","split","Vector3","Number","geometry","TubeGeometry","MeshPhongMaterial","mesh","Mesh","setObject3D","update","prevData","Object","keys","remove","removeObject3D"],"sources":["C:/UsersFolders/Polina/РЭУ/Graph/view/node_modules/aframe-extras/src/primitives/a-tube.js"],"sourcesContent":["/**\n * Tube following a custom path.\n *\n * Usage:\n *\n * ```html\n * <a-tube path=\"5 0 5, 5 0 -5, -5 0 -5\" radius=\"0.5\"></a-tube>\n * ```\n */\nmodule.exports.Primitive = AFRAME.registerPrimitive('a-tube', {\n  defaultComponents: {\n    tube:           {},\n  },\n  mappings: {\n    path:           'tube.path',\n    segments:       'tube.segments',\n    radius:         'tube.radius',\n    'radial-segments': 'tube.radialSegments',\n    closed:         'tube.closed'\n  }\n});\n\nmodule.exports.Component = AFRAME.registerComponent('tube', {\n  schema: {\n    path:           {default: []},\n    segments:       {default: 64},\n    radius:         {default: 1},\n    radialSegments: {default: 8},\n    closed:         {default: false}\n  },\n\n  init: function () {\n    const el = this.el,\n        data = this.data;\n    let material = el.components.material;\n\n    if (!data.path.length) {\n      console.error('[a-tube] `path` property expected but not found.');\n      return;\n    }\n\n    const curve = new THREE.CatmullRomCurve3(data.path.map(function (point) {\n      point = point.split(' ');\n      return new THREE.Vector3(Number(point[0]), Number(point[1]), Number(point[2]));\n    }));\n    const geometry = new THREE.TubeGeometry(\n      curve, data.segments, data.radius, data.radialSegments, data.closed\n    );\n\n    if (!material) {\n      material = {};\n      material.material = new THREE.MeshPhongMaterial();\n    }\n\n    this.mesh = new THREE.Mesh(geometry, material.material);\n    this.el.setObject3D('mesh', this.mesh);\n  },\n\n  update: function (prevData) {\n    if (!Object.keys(prevData).length) return;\n\n    this.remove();\n    this.init();\n  },\n\n  remove: function () {\n    if (this.mesh) this.el.removeObject3D('mesh');\n  }\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAO,CAACC,SAAS,GAAGC,MAAM,CAACC,iBAAiB,CAAC,QAAQ,EAAE;EAC5DC,iBAAiB,EAAE;IACjBC,IAAI,EAAY,CAAC;EACnB,CAAC;EACDC,QAAQ,EAAE;IACRC,IAAI,EAAY,WAAW;IAC3BC,QAAQ,EAAQ,eAAe;IAC/BC,MAAM,EAAU,aAAa;IAC7B,iBAAiB,EAAE,qBAAqB;IACxCC,MAAM,EAAU;EAClB;AACF,CAAC,CAAC;AAEFX,MAAM,CAACC,OAAO,CAACW,SAAS,GAAGT,MAAM,CAACU,iBAAiB,CAAC,MAAM,EAAE;EAC1DC,MAAM,EAAE;IACNN,IAAI,EAAY;MAACO,OAAO,EAAE;IAAE,CAAC;IAC7BN,QAAQ,EAAQ;MAACM,OAAO,EAAE;IAAE,CAAC;IAC7BL,MAAM,EAAU;MAACK,OAAO,EAAE;IAAC,CAAC;IAC5BC,cAAc,EAAE;MAACD,OAAO,EAAE;IAAC,CAAC;IAC5BJ,MAAM,EAAU;MAACI,OAAO,EAAE;IAAK;EACjC,CAAC;EAEDE,IAAI,EAAE,SAAAA,CAAA,EAAY;IAChB,MAAMC,EAAE,GAAG,IAAI,CAACA,EAAE;MACdC,IAAI,GAAG,IAAI,CAACA,IAAI;IACpB,IAAIC,QAAQ,GAAGF,EAAE,CAACG,UAAU,CAACD,QAAQ;IAErC,IAAI,CAACD,IAAI,CAACX,IAAI,CAACc,MAAM,EAAE;MACrBC,OAAO,CAACC,KAAK,CAAC,kDAAkD,CAAC;MACjE;IACF;IAEA,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAACC,gBAAgB,CAACR,IAAI,CAACX,IAAI,CAACoB,GAAG,CAAC,UAAUC,KAAK,EAAE;MACtEA,KAAK,GAAGA,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;MACxB,OAAO,IAAIJ,KAAK,CAACK,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC,EAAEG,MAAM,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC,EAAEG,MAAM,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAChF,CAAC,CAAC,CAAC;IACH,MAAMI,QAAQ,GAAG,IAAIP,KAAK,CAACQ,YAAY,CACrCT,KAAK,EAAEN,IAAI,CAACV,QAAQ,EAAEU,IAAI,CAACT,MAAM,EAAES,IAAI,CAACH,cAAc,EAAEG,IAAI,CAACR,MAC/D,CAAC;IAED,IAAI,CAACS,QAAQ,EAAE;MACbA,QAAQ,GAAG,CAAC,CAAC;MACbA,QAAQ,CAACA,QAAQ,GAAG,IAAIM,KAAK,CAACS,iBAAiB,CAAC,CAAC;IACnD;IAEA,IAAI,CAACC,IAAI,GAAG,IAAIV,KAAK,CAACW,IAAI,CAACJ,QAAQ,EAAEb,QAAQ,CAACA,QAAQ,CAAC;IACvD,IAAI,CAACF,EAAE,CAACoB,WAAW,CAAC,MAAM,EAAE,IAAI,CAACF,IAAI,CAAC;EACxC,CAAC;EAEDG,MAAM,EAAE,SAAAA,CAAUC,QAAQ,EAAE;IAC1B,IAAI,CAACC,MAAM,CAACC,IAAI,CAACF,QAAQ,CAAC,CAAClB,MAAM,EAAE;IAEnC,IAAI,CAACqB,MAAM,CAAC,CAAC;IACb,IAAI,CAAC1B,IAAI,CAAC,CAAC;EACb,CAAC;EAED0B,MAAM,EAAE,SAAAA,CAAA,EAAY;IAClB,IAAI,IAAI,CAACP,IAAI,EAAE,IAAI,CAAClB,EAAE,CAAC0B,cAAc,CAAC,MAAM,CAAC;EAC/C;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}