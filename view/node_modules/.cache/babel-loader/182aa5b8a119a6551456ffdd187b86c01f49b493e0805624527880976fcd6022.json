{"ast":null,"code":"import { extent, thresholdSturges, tickStep, range } from \"d3-array\";\nimport { slice } from \"./array\";\nimport ascending from \"./ascending\";\nimport area from \"./area\";\nimport constant from \"./constant\";\nimport contains from \"./contains\";\nimport noop from \"./noop\";\nvar cases = [[], [[[1.0, 1.5], [0.5, 1.0]]], [[[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [0.5, 1.0]]], [[[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 0.5], [1.0, 1.5]]], [[[1.0, 0.5], [0.5, 1.0]]], [[[0.5, 1.0], [1.0, 0.5]]], [[[1.0, 1.5], [1.0, 0.5]]], [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [1.0, 0.5]]], [[[0.5, 1.0], [1.5, 1.0]]], [[[1.0, 1.5], [1.5, 1.0]]], [[[0.5, 1.0], [1.0, 1.5]]], []];\nexport default function () {\n  var dx = 1,\n    dy = 1,\n    threshold = thresholdSturges,\n    smooth = smoothLinear;\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = extent(values),\n        start = domain[0],\n        stop = domain[1];\n      tz = tickStep(start, stop, tz);\n      tz = range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n    return tz.map(function (value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n      holes = [];\n    isorings(values, value, function (ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);else holes.push(ring);\n    });\n    holes.forEach(function (hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array(),\n      fragmentByEnd = new Array(),\n      x,\n      y,\n      t0,\n      t1,\n      t2,\n      t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n        end = [line[1][0] + x, line[1][1] + y],\n        startIndex = index(start),\n        endIndex = index(end),\n        f,\n        g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {\n              start: f.start,\n              end: g.end,\n              ring: f.ring.concat(g.ring)\n            };\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {\n              start: g.start,\n              end: f.end,\n              ring: g.ring.concat(f.ring)\n            };\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {\n          start: startIndex,\n          end: endIndex,\n          ring: [start, end]\n        };\n      }\n    }\n  }\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function (point) {\n      var x = point[0],\n        y = point[1],\n        xt = x | 0,\n        yt = y | 0,\n        v0,\n        v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n  contours.contour = contour;\n  contours.size = function (_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]),\n      _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n  contours.thresholds = function (_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n  contours.smooth = function (_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n  return contours;\n}","map":{"version":3,"names":["extent","thresholdSturges","tickStep","range","slice","ascending","area","constant","contains","noop","cases","dx","dy","threshold","smooth","smoothLinear","contours","values","tz","Array","isArray","domain","start","stop","Math","floor","sort","map","value","contour","polygons","holes","isorings","ring","push","forEach","hole","i","n","length","polygon","type","coordinates","callback","fragmentByStart","fragmentByEnd","x","y","t0","t1","t2","t3","stitch","line","end","startIndex","index","endIndex","f","g","concat","unshift","point","xt","yt","v0","v1","size","_","arguments","_0","ceil","_1","Error","thresholds","call"],"sources":["C:/UsersFolders/Polina/РЭУ/Graph/view/node_modules/d3-contour/src/contours.js"],"sourcesContent":["import {extent, thresholdSturges, tickStep, range} from \"d3-array\";\nimport {slice} from \"./array\";\nimport ascending from \"./ascending\";\nimport area from \"./area\";\nimport constant from \"./constant\";\nimport contains from \"./contains\";\nimport noop from \"./noop\";\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      threshold = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = extent(values), start = domain[0], stop = domain[1];\n      tz = tickStep(start, stop, tz);\n      tz = range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}