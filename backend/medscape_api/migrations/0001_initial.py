# Generated by Django 3.2.3 on 2025-05-19 13:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdverseEffectsMedScape',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adverse_effects_name_en', models.CharField(max_length=10000, verbose_name='Adverse Effects')),
                ('adverse_effects_name_ru', models.CharField(max_length=10000, verbose_name='Побочное действие')),
                ('adverse_effects_percent', models.CharField(max_length=10000, verbose_name='Процент')),
            ],
            options={
                'verbose_name': 'Побочные эффекты ЛС MedScape',
                'ordering': ['adverse_effects_percent'],
            },
        ),
        migrations.CreateModel(
            name='Drug',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название лекарственного средства')),
                ('time_create', models.DateTimeField(auto_now_add=True)),
                ('time_update', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'ЛС',
                'verbose_name_plural': 'ЛС',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PregnancyAndLactationMedScape',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pregnancy_common_en', models.CharField(max_length=10000, verbose_name='Pregnancy_common')),
                ('pregnancy_specific_en', models.CharField(max_length=10000, verbose_name='Pregnancy_specific')),
                ('lactation_common_en', models.CharField(max_length=10000, verbose_name='Lactation_common')),
                ('lactation_specific_en', models.CharField(max_length=10000, verbose_name='Lactation_specific')),
                ('pregnancy_common_ru', models.CharField(max_length=10000, verbose_name='Беременность')),
                ('pregnancy_specific_ru', models.CharField(max_length=10000, verbose_name='Конкретные рекомендации для беременных')),
                ('lactation_common_ru', models.CharField(max_length=10000, verbose_name='Грудное вскармливание')),
                ('lactation_specific_ru', models.CharField(max_length=10000, verbose_name='Конкретные рекомендации для грудного вскармливания')),
            ],
            options={
                'verbose_name': 'Лактация ЛС MedScape',
            },
        ),
        migrations.CreateModel(
            name='SourceDrugsMedScape',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=10000, verbose_name='Источник')),
            ],
            options={
                'verbose_name': 'Источник информации о ЛС MedScape',
                'ordering': ['source'],
            },
        ),
        migrations.CreateModel(
            name='TypeDrugsMedScape',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_en', models.CharField(max_length=255, verbose_name='Type Drug')),
                ('type_ru', models.CharField(max_length=255, verbose_name='Тип ЛС')),
            ],
            options={
                'verbose_name': 'Тип ЛС MedScape',
                'ordering': ['type_en'],
            },
        ),
        migrations.CreateModel(
            name='WarningsMedScape',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warnings_name_en', models.CharField(max_length=10000, verbose_name='Warnings')),
                ('warnings_name_ru', models.CharField(max_length=10000, verbose_name='Опасность')),
                ('warnings_type', models.CharField(max_length=10000, verbose_name='Тип опасности')),
            ],
            options={
                'verbose_name': 'Опасность применения ЛС MedScape',
                'ordering': ['warnings_type'],
            },
        ),
        migrations.CreateModel(
            name='NameDrugsMedScape',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', models.CharField(max_length=255, verbose_name='Name Drug')),
                ('name_ru', models.CharField(max_length=255, verbose_name='Название ЛС')),
                ('group_type', models.ManyToManyField(to='medscape_api.TypeDrugsMedScape')),
            ],
            options={
                'verbose_name': 'МНН ЛС MedScape',
                'ordering': ['name_en'],
            },
        ),
        migrations.CreateModel(
            name='InteractionMedScape',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classification_type_en', models.CharField(max_length=255, verbose_name='Classification Interaction')),
                ('classification_type_ru', models.CharField(max_length=255, verbose_name='Классификация взаимодействия')),
                ('description_en', models.CharField(max_length=10000, verbose_name='Description')),
                ('description_ru', models.CharField(max_length=10000, verbose_name='Описание')),
                ('interaction_with', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='medscape_api.namedrugsmedscape')),
            ],
            options={
                'verbose_name': 'Взаимодействие ЛС MedScape',
                'ordering': ['classification_type_en'],
            },
        ),
        migrations.CreateModel(
            name='DrugsInformationMedScape',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_file', models.CharField(max_length=255, verbose_name='Название файла с загруженной информацией')),
                ('comment_en', models.CharField(max_length=255, verbose_name='Comment')),
                ('comment_ru', models.CharField(max_length=255, verbose_name='Коментарий')),
                ('adverse_effects', models.ManyToManyField(to='medscape_api.AdverseEffectsMedScape')),
                ('interaction', models.ManyToManyField(to='medscape_api.InteractionMedScape')),
                ('name_drug', models.ManyToManyField(to='medscape_api.NameDrugsMedScape')),
                ('pregnancy_and_lactation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='medscape_api.pregnancyandlactationmedscape')),
                ('source_drugs', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='medscape_api.sourcedrugsmedscape')),
                ('warnings', models.ManyToManyField(to='medscape_api.WarningsMedScape')),
            ],
            options={
                'verbose_name': 'Информация о ЛС MedScape',
                'ordering': ['name_file'],
            },
        ),
        migrations.CreateModel(
            name='DrugInteractionTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction', models.TextField(verbose_name='Взаимодействие')),
                ('time_create', models.DateTimeField(auto_now_add=True)),
                ('time_update', models.DateTimeField(auto_now=True)),
                ('drug_one', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='druginteractions_one', to='medscape_api.drug', verbose_name='ЛС №1')),
                ('drug_two', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='druginteractions_two', to='medscape_api.drug', verbose_name='ЛС №2')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Взаимодействие ЛС (Таблица)',
                'verbose_name_plural': 'Взаимодействие ЛС (Таблица)',
                'ordering': ['drug_one'],
            },
        ),
        migrations.CreateModel(
            name='DrugGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название группы')),
                ('time_create', models.DateTimeField(auto_now_add=True)),
                ('time_update', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Группа ЛС',
                'verbose_name_plural': 'Группы ЛС',
                'ordering': ['title'],
            },
        ),
        migrations.AddField(
            model_name='drug',
            name='pg',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='medscape_api.druggroup', verbose_name='Группа лекарственных средств'),
        ),
        migrations.AddField(
            model_name='drug',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
    ]
